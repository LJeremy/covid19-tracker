{"version":3,"sources":["components/Layout/index.js","helpers/index.js","components/Tracker/index.js","components/Table/index.js","views/Home/index.js","helpers/chart.js","components/Chart/index.js","views/Country/index.js","views/NotFound/index.js","serviceWorker.js","index.js","views/routes.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Layout","props","children","classes","Fragment","CssBaseline","AppBar","position","Toolbar","style","textDecoration","color","to","Typography","variant","className","Container","maxWidth","FormatNumber","number","Intl","NumberFormat","format","error","paper","padding","textAlign","palette","text","secondary","Tracker","data","Grid","container","Tooltip","item","xs","Paper","latest","marginTop","table","minWidth","CountryTable","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","confirmed","locations","map","row","index","key","name","scope","country","province","deaths","recovered","Home","mapLocationToChartSeries","location","console","log","dateValuePairs","Object","entries","history","locationHistoryEntry","dateParts","split","year","Number","parseInt","month","day","date","Date","value","toDateValuePair","sort","a","b","firstDate","pair","pointStart","UTC","getFullYear","getMonth","getDate","pointInterval","Chart","componentDidMount","options","chart","height","type","zoomType","xAxis","yAxis","legend","layout","align","verticalAlign","series","find","_","setState","loading","state","nextProps","prevProps","this","highcharts","Highcharts","Component","marginBottom","Country","useParams","useState","setConfirmed","setDeaths","setRecovered","lastUpdated","setUpdated","useEffect","undefined","parse","last_updated","toString","Map","center","coordinates","lat","long","zoom","TileLayer","url","attribution","NotFound","Boolean","window","hostname","match","ReactDOM","render","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","useFetch","ReactGA","initialize","ThemeProvider","basename","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0607dff8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst Layout = props => {\n  const { children } = props;\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link style={{ textDecoration: \"inherit\", color: \"white\" }} to=\"/\">\n            <Typography variant=\"h6\" className={classes.title}>\n              COVID-19\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"lg\">{children}</Container>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","export function FormatNumber(number) {\n  try {\n    return new Intl.NumberFormat(\"en-US\").format(number);\n  } catch (error) {\n    return 0;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// Helpers\n\nimport { FormatNumber } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Tracker(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {data ? (\n        <Grid container spacing={3}>\n          <Tooltip title=\"Confirmed\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                🤒 {FormatNumber(data.latest[\"confirmed\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Deaths\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                💀 {FormatNumber(data.latest[\"deaths\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Recovered\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                ✅ {FormatNumber(data.latest[\"recovered\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n        </Grid>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 32\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function CountryTable(props) {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  return data ? (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell>Province</TableCell>\n            <TableCell>Confirmed</TableCell>\n            <TableCell>Deaths</TableCell>\n            <TableCell>Recovered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.confirmed.locations.map((row, index) => (\n            <TableRow key={row.name} key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link\n                  style={{ color: \"white\", textDecoration: \"inherit\" }}\n                  to={`/country/${row.country}`}\n                >\n                  {row.country}\n                </Link>\n              </TableCell>\n              <TableCell>{row.province}</TableCell>\n              <TableCell>{row.latest}</TableCell>\n              <TableCell>{data.deaths.locations[index].latest}</TableCell>\n              <TableCell>{data.recovered.locations[index].latest}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  ) : (\n    <h1>Loading...</h1>\n  );\n}\n","import React from \"react\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport Tracker from \"../../components/Tracker\";\nimport CountryTable from \"../../components/Table\";\n\nexport default function Home(props) {\n  const { data } = props;\n  return (\n    <Layout>\n      <h1>Cases</h1>\n      <Tracker data={data} />\n\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","export function toDateValuePair(locationHistoryEntry) {\n  console.log(\n    \"toDateValuePair value\",\n    Object.entries(locationHistoryEntry)[0][0]\n  );\n  const dateParts = Object.entries(locationHistoryEntry)[0][1].split(\"/\");\n  const year = Number.parseInt(\"20\" + dateParts[2], 10);\n  const month = Number.parseInt(dateParts[0], 10) - 1;\n  const day = Number.parseInt(dateParts[1], 10);\n\n  return {\n    date: new Date(year, month, day),\n    value: Number.parseInt(locationHistoryEntry[1], 10)\n  };\n}\n\nexport function mapLocationToChartSeries(location) {\n  console.log(\"mapLocationToChart value\", location);\n  const dateValuePairs = Object.entries(location.history)\n    .map(location => toDateValuePair(location))\n    .sort((a, b) => a + b);\n\n  const firstDate = dateValuePairs[0].date;\n\n  console.log(\"CHART FIRST DATA\", firstDate);\n\n  return {\n    name: location.country,\n    data: dateValuePairs.map(pair => pair.value),\n    pointStart: Date.UTC(\n      firstDate.getFullYear(),\n      firstDate.getMonth(),\n      firstDate.getDate()\n    ),\n    pointInterval: 24 * 3600 * 1000 // one day;\n  };\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n\n    const options = {\n      chart: {\n        height: 400,\n        type: \"line\",\n        zoomType: \"x\"\n      },\n      title: {\n        text: `Coronavirus confirmed cases in ${this.props.country}`\n      },\n      xAxis: {\n        type: \"datetime\"\n      },\n      yAxis: {\n        title: {\n          text: \"Confirmed cases\"\n        }\n      },\n      legend: {\n        layout: \"vertical\",\n        align: \"left\",\n        verticalAlign: \"middle\"\n      },\n      series: [\n        mapLocationToChartSeries(\n          this.props.data.confirmed.locations.find(\n            _ => _.country === this.props.country\n          )\n        )\n        // mapLocationToChartSeries(\n        //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n        // )\n      ]\n    };\n\n    this.setState({ options });\n    this.setState({ loading: false });\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.setState({ loading: false });\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <h1>Loading...</h1>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Country(props) {\n  let { country } = useParams();\n  const { data } = props;\n\n  const [confirmed, setConfirmed] = useState();\n  const [deaths, setDeaths] = useState();\n  const [recovered, setRecovered] = useState();\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmed(data.confirmed.locations.find(_ => _.country === country));\n    setDeaths(data.deaths.locations.find(_ => _.country === country));\n    setRecovered(data.recovered.locations.find(_ => _.country === country));\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <h1>{country}</h1>\n        {data && confirmed && deaths && recovered ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    🤒 {FormatNumber(confirmed[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    💀 {FormatNumber(deaths[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    ✅ {FormatNumber(recovered[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} country={country} />\n            <Map\n              style={{ height: \"600px\", marginTop: \"32px\" }}\n              center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n              zoom={7}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n            </Map>\n          </>\n        ) : (\n          <h1>Loading...</h1>\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function NotFound() {\n  return (\n    <Layout>\n      <h1>NotFOuNBNDDD</h1>\n    </Layout>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\n//views\nimport Home from \"./Home\";\nimport Country from \"./Country\";\nimport NotFound from \"./NotFound\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  const data = useFetch(\n    `https://coronavirus-tracker-api.herokuapp.com/all`,\n    \"items\"\n  );\n\n  ReactGA.initialize(\"UA-37850527-11\");\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename=\"/covid19-tracker\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home data={data} />\n          </Route>\n          <Route exact path=\"/country/:country\">\n            <Country data={data} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}