{"version":3,"sources":["assets/images/banner.png","components/Layout/index.js","helpers/index.js","components/Tracker/index.js","components/Table/index.js","components/News/index.js","components/Share/index.js","views/Home/index.js","helpers/chart.js","components/Chart/index.js","views/Country/index.js","views/NotFound/index.js","components/Tags/index.js","helpers/history.js","serviceWorker.js","index.js","views/routes.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Layout","props","children","classes","Fragment","CssBaseline","AppBar","position","Toolbar","style","textDecoration","color","to","Typography","variant","className","Container","maxWidth","FormatNumber","number","Intl","NumberFormat","format","error","paper","padding","textAlign","palette","text","secondary","Tracker","data","Grid","container","Tooltip","item","xs","Paper","latest","CircularProgress","marginTop","table","minWidth","CountryTable","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","confirmed","locations","map","row","index","key","name","scope","country","province","deaths","recovered","width","backgroundColor","background","inline","display","link","cursor","transform","News","useFetch","console","log","List","articles","href","url","target","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","urlToImage","ListItemText","primary","source","author","description","Divider","Share","shareUrl","document","URL","FacebookShareButton","quote","FacebookIcon","round","FacebookShareCount","count","FacebookMessengerShareButton","appId","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","windowWidth","windowHeight","RedditIcon","RedditShareCount","LivejournalShareButton","LivejournalIcon","MailruShareButton","MailruIcon","EmailShareButton","subject","body","EmailIcon","ViberShareButton","ViberIcon","WorkplaceShareButton","WorkplaceIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","InstapaperShareButton","InstapaperIcon","Component","Home","ReactGA","pageview","mapLocationToChartSeries","location","dateValuePairs","Object","entries","history","locationHistoryEntry","dateParts","split","year","Number","parseInt","month","day","date","Date","value","toDateValuePair","sort","a","b","firstDate","pair","pointStart","UTC","getFullYear","getMonth","getDate","pointInterval","Chart","componentDidMount","options","chart","height","type","zoomType","xAxis","yAxis","legend","layout","align","verticalAlign","series","find","_","setState","loading","state","nextProps","prevProps","this","highcharts","Highcharts","marginBottom","Country","useParams","useState","setConfirmed","setDeaths","setRecovered","lastUpdated","setUpdated","useEffect","undefined","parse","last_updated","toString","Map","center","coordinates","lat","long","zoom","TileLayer","attribution","NotFound","Tags","Helmet","property","content","CImage","createBrowserHistory","Boolean","window","hostname","match","initialize","ReactDOM","render","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","ThemeProvider","basename","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.34112455.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.2d30a510.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst Layout = props => {\n  const { children } = props;\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link style={{ textDecoration: \"inherit\", color: \"white\" }} to=\"/\">\n            <Typography variant=\"h6\" className={classes.title}>\n              COVID-19\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"lg\">{children}</Container>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","export function FormatNumber(number) {\n  try {\n    return new Intl.NumberFormat(\"en-US\").format(number);\n  } catch (error) {\n    return 0;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Tracker(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {data ? (\n        <Grid container spacing={3}>\n          <Tooltip title=\"Confirmed\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                🤒 {FormatNumber(data.latest[\"confirmed\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Deaths\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                💀 {FormatNumber(data.latest[\"deaths\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Recovered\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                ✅ {FormatNumber(data.latest[\"recovered\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 32\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function CountryTable(props) {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  return data ? (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell>Province</TableCell>\n            <TableCell>Confirmed</TableCell>\n            <TableCell>Deaths</TableCell>\n            <TableCell>Recovered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.confirmed.locations.map((row, index) => (\n            <TableRow key={row.name} key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link\n                  style={{ color: \"white\", textDecoration: \"inherit\" }}\n                  to={`/country/${row.country}`}\n                >\n                  {row.country}\n                </Link>\n              </TableCell>\n              <TableCell>{row.province}</TableCell>\n              <TableCell>{row.latest}</TableCell>\n              <TableCell>{data.deaths.locations[index].latest}</TableCell>\n              <TableCell>{data.recovered.locations[index].latest}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"translate(14px, 17px) scale(1.2)\"\n    }\n  }\n}));\n\nexport default function News() {\n  const classes = useStyles();\n\n  const data = useFetch(\n    `https://newsapi.org/v2/everything?language=en&q=covid19&sortBy=publishedAt&pageSize=10&apiKey=a91facb09c9444c4a2797a5ac993dc57`,\n    \"news\"\n  );\n\n  console.log(\"NEWS\", data);\n  return (\n    <List className={classes.root}>\n      {data &&\n        data.articles.map((item, index) => (\n          <a href={item.url} target=\"_blank\" className={classes.link}>\n            <ListItem key={index} alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.urlToImage} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={item.title}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {item.source.name}, {item.author} {\"\"}\n                    </Typography>\n                    {item.description}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            {index !== 9 && <Divider variant=\"inset\" component=\"li\" />}\n          </a>\n        ))}\n    </List>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable import/no-unresolved, import/extensions, import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  FacebookShareCount,\n  RedditShareCount,\n  FacebookShareButton,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  EmailShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  ViberShareButton,\n  WorkplaceShareButton,\n  LineShareButton,\n  PocketShareButton,\n  InstapaperShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  WhatsappIcon,\n  RedditIcon,\n  MailruIcon,\n  EmailIcon,\n  LivejournalIcon,\n  ViberIcon,\n  WorkplaceIcon,\n  LineIcon,\n  PocketIcon,\n  InstapaperIcon\n} from \"react-share\";\n\nclass Share extends Component {\n  render() {\n    const shareUrl = document.URL;\n    const title = document.title;\n\n    console.log(\"DOCUMENT URL\", shareUrl);\n    console.log(\"DOCUMENT TITLE\", title);\n\n    return (\n      <>\n        <h1>Share this page</h1>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n\n            <FacebookShareCount\n              url={shareUrl}\n              className=\"Demo__some-network__share-count\"\n            >\n              {count => count}\n            </FacebookShareCount>\n          </Grid>\n          <Grid item xs>\n            <FacebookMessengerShareButton\n              url={shareUrl}\n              appId=\"521270401588372\"\n            >\n              <FacebookMessengerIcon size={32} round />\n            </FacebookMessengerShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <TwitterShareButton url={shareUrl} title={title}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <TelegramShareButton url={shareUrl} title={title}>\n              <TelegramIcon size={32} round />\n            </TelegramShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <WhatsappShareButton url={shareUrl} title={title} separator=\":: \">\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <LinkedinShareButton url={shareUrl}>\n              <LinkedinIcon size={32} round />\n            </LinkedinShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <RedditShareButton\n              url={shareUrl}\n              title={title}\n              windowWidth={660}\n              windowHeight={460}\n            >\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n\n            <div>\n              <RedditShareCount\n                url={shareUrl}\n                className=\"Demo__some-network__share-count\"\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs>\n            <LivejournalShareButton\n              url={shareUrl}\n              title={title}\n              description={shareUrl}\n            >\n              <LivejournalIcon size={32} round />\n            </LivejournalShareButton>\n          </Grid>\n          <Grid item xs>\n            <MailruShareButton url={shareUrl} title={title}>\n              <MailruIcon size={32} round />\n            </MailruShareButton>\n          </Grid>\n          <Grid item xs>\n            <EmailShareButton url={shareUrl} subject={title} body=\"body\">\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n          </Grid>\n          <Grid item xs>\n            <ViberShareButton url={shareUrl} title={title}>\n              <ViberIcon size={32} round />\n            </ViberShareButton>\n          </Grid>\n          <Grid item xs>\n            <WorkplaceShareButton url={shareUrl} quote={title}>\n              <WorkplaceIcon size={32} round />\n            </WorkplaceShareButton>\n          </Grid>\n          <Grid item xs>\n            <LineShareButton url={shareUrl} title={title}>\n              <LineIcon size={32} round />\n            </LineShareButton>\n          </Grid>\n          <Grid item xs>\n            <PocketShareButton url={shareUrl} title={title}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </Grid>\n          <Grid item xs>\n            <InstapaperShareButton url={shareUrl} title={title}>\n              <InstapaperIcon size={32} round />\n            </InstapaperShareButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Share;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport Tracker from \"../../components/Tracker\";\nimport CountryTable from \"../../components/Table\";\nimport News from \"../../components/News\";\nimport Share from \"../../components/Share\";\n\nexport default function Home(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <Tracker data={data} />\n      <h1>Latest Worldwide News</h1>\n      <News />\n      <Share />\n      <h1>Latest Worldwide Data</h1>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","export function toDateValuePair(locationHistoryEntry) {\n  console.log(\n    \"toDateValuePair value\",\n    Object.entries(locationHistoryEntry)[0][0]\n  );\n  const dateParts = Object.entries(locationHistoryEntry)[0][1].split(\"/\");\n  const year = Number.parseInt(\"20\" + dateParts[2], 10);\n  const month = Number.parseInt(dateParts[0], 10) - 1;\n  const day = Number.parseInt(dateParts[1], 10);\n\n  return {\n    date: new Date(year, month, day),\n    value: Number.parseInt(locationHistoryEntry[1], 10)\n  };\n}\n\nexport function mapLocationToChartSeries(location) {\n  console.log(\"mapLocationToChart value\", location);\n  const dateValuePairs = Object.entries(location.history)\n    .map(location => toDateValuePair(location))\n    .sort((a, b) => a + b);\n\n  const firstDate = dateValuePairs[0].date;\n\n  console.log(\"CHART FIRST DATA\", firstDate);\n\n  return {\n    name: location.country,\n    data: dateValuePairs.map(pair => pair.value),\n    pointStart: Date.UTC(\n      firstDate.getFullYear(),\n      firstDate.getMonth(),\n      firstDate.getDate()\n    ),\n    pointInterval: 24 * 3600 * 1000 // one day;\n  };\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n\n    const options = {\n      chart: {\n        height: 400,\n        type: \"line\",\n        zoomType: \"x\"\n      },\n      title: {\n        text: `Coronavirus confirmed cases in ${this.props.country}`\n      },\n      xAxis: {\n        type: \"datetime\"\n      },\n      yAxis: {\n        title: {\n          text: \"Confirmed cases\"\n        }\n      },\n      legend: {\n        layout: \"vertical\",\n        align: \"left\",\n        verticalAlign: \"middle\"\n      },\n      series: [\n        mapLocationToChartSeries(\n          this.props.data.confirmed.locations.find(\n            _ => _.country === this.props.country\n          )\n        )\n        // mapLocationToChartSeries(\n        //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n        // )\n      ]\n    };\n\n    this.setState({ options });\n    this.setState({ loading: false });\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.setState({ loading: false });\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nimport { Map, TileLayer } from \"react-leaflet\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart\";\nimport Share from \"../../components/Share\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Country(props) {\n  let { country } = useParams();\n  const { data } = props;\n  ReactGA.pageview(`/country/${country}`);\n\n  const [confirmed, setConfirmed] = useState();\n  const [deaths, setDeaths] = useState();\n  const [recovered, setRecovered] = useState();\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmed(data.confirmed.locations.find(_ => _.country === country));\n    setDeaths(data.deaths.locations.find(_ => _.country === country));\n    setRecovered(data.recovered.locations.find(_ => _.country === country));\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <h1>{country}</h1>\n        {data && confirmed && deaths && recovered ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    🤒 {FormatNumber(confirmed[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    💀 {FormatNumber(deaths[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    ✅ {FormatNumber(recovered[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} country={country} />\n            <Share />\n            <Map\n              style={{ height: \"600px\", marginTop: \"32px\" }}\n              center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n              zoom={7}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n            </Map>\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function NotFound() {\n  return (\n    <Layout>\n      <h1>NotFOuNBNDDD</h1>\n    </Layout>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport CImage from \"../../assets/images/banner.png\";\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <meta property=\"og:type\" content=\"website\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta property=\"og:title\" content=\"Corona Virus Tracker | COVID-19\" />\n          <meta\n            property=\"og:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"og:image\" content={CImage} />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            property=\"twitter:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta\n            property=\"twitter:title\"\n            content=\"Corona Virus Tracker | COVID-19\"\n          />\n          <meta\n            property=\"twitter:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"twitter:image\" content={CImage} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tags;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactGA.initialize(\"UA-37850527-11\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\n//views\nimport Home from \"./Home\";\nimport Country from \"./Country\";\nimport NotFound from \"./NotFound\";\n\n//components\nimport Tags from \"../components/Tags\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\nimport history from \"../helpers/history\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  const data = useFetch(\n    `https://coronavirus-tracker-api.herokuapp.com/all`,\n    \"items\"\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Tags />\n      <Router basename=\"/covid19-tracker\" history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home data={data} />\n          </Route>\n          <Route exact path=\"/country/:country\">\n            <Country data={data} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}