{"version":3,"sources":["components/Layout/index.js","helpers/index.js","components/Tracker/index.js","components/Table/index.js","components/News/index.js","components/Share/index.js","components/Map/index.js","components/Mortality/index.js","views/Home/index.js","helpers/chart.js","components/Chart/index.js","views/Country/index.js","views/Countries/index.js","views/Worldwide/index.js","views/News/index.js","components/FAQItem/index.js","views/FAQ/index.js","views/NotFound/index.js","views/Compare/index.js","components/Chart/compare.js","views/Compare/detail.js","components/Tags/index.js","helpers/history.js","views/routes.js","serviceWorker.js","index.js","assets/images/banner.png"],"names":["useStyles","makeStyles","theme","root","display","marginTop","spacing","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","link","color","palette","text","primary","textDecoration","title","Layout","props","container","children","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","to","ListItem","button","ListItemIcon","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Container","maxWidth","style","href","FormatNumber","number","Intl","NumberFormat","format","error","textAlign","secondary","cases","yellow","death","red","recovered","green","Tracker","data","Grid","Tooltip","item","xs","Paper","role","latest","CircularProgress","table","minWidth","CountryTable","TableContainer","component","Table","size","TableHead","TableRow","TableCell","TableBody","confirmed","locations","map","row","index","key","name","scope","province","country","deaths","backgroundColor","background","inline","cursor","transform","News","useFetch","toLowerCase","console","log","articles","url","target","alignItems","ListItemAvatar","Avatar","alt","src","urlToImage","Fragment","source","author","description","Share","shareUrl","document","URL","FacebookShareButton","quote","FacebookIcon","round","FacebookShareCount","count","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","windowWidth","windowHeight","RedditIcon","RedditShareCount","MailruShareButton","MailruIcon","EmailShareButton","subject","body","EmailIcon","ViberShareButton","ViberIcon","WorkplaceShareButton","WorkplaceIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","InstapaperShareButton","InstapaperIcon","Component","calculateRadius","multiplier","min","max","radius","MapComponent","createHashHistory","Map","height","center","zoom","maxZoom","minZoom","attributionControl","zoomControl","maxBoundsViscosity","useFlyTo","TileLayer","location","Circle","coordinates","lat","long","fillColor","fillOpacity","marginBottom","Mortality","toFixed","Home","ReactGA","pageview","mapLocationToChartSeries","dateValuePairs","Object","entries","history","locationHistoryEntry","dateParts","split","year","Number","parseInt","month","day","date","Date","value","toDateValuePair","sort","a","b","firstDate","pair","pointStart","UTC","getFullYear","getMonth","getDate","pointInterval","Chart","componentDidMount","window","matchMedia","matches","options","chart","type","zoomType","xAxis","yAxis","plotOptions","series","dataLabels","enabled","formatter","this","y","find","_","setState","loading","state","nextProps","prevProps","highcharts","Highcharts","Country","useParams","setConfirmed","setDeaths","setRecovered","lastUpdated","setUpdated","useEffect","undefined","parse","last_updated","toString","Helmet","country_code","Countries","searchTerm","setSearchTerm","searchResults","setSearchResults","results","filter","includes","TextField","fullWidth","label","onChange","event","fontSize","lineHeight","verticalAlign","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","Worldwide","NewsView","sourceType","screenName","FAQItem","setOpen","Collapse","in","timeout","unmountOnExit","disablePadding","FAQ","createBrowserHistory","NotFound","setTimeout","goBack","Compare","configureOptions","countryX","countryY","toPercentage","arr","d","i","decreaseValue","Math","abs","length","CompareDetail","confirmedX","setConfirmedX","deathsX","setDeathsX","recoveredX","setRecoveredX","confirmedY","setConfirmedY","deathsY","setDeathsY","recoveredY","setRecoveredY","values","Tags","property","CImage","ScrollToTop","scrollTo","Boolean","hostname","match","initialize","ReactDOM","render","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","process","REACT_APP_STAGE","ThemeProvider","basename","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f2da69bf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(8)\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  link: {\n    color: theme.palette.text.primary,\n    textDecoration: \"inherit\"\n  },\n  title: {\n    color: theme.palette.text.primary,\n    textDecoration: \"inherit\"\n  }\n}));\n\nfunction Layout(props) {\n  const { container, children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div className={classes.drawer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/\">\n          <ListItem button>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/worldwide\">\n          <ListItem button>\n            <ListItemIcon>\n              <PublicIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Worldwide\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/countries\">\n          <ListItem button>\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Country List\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      {/* <List>\n        <Link className={classes.link} to=\"/compare\">\n          <ListItem button>\n            <ListItemIcon>\n              <CompareArrowsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Compare\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider /> */}\n      <List>\n        <Link className={classes.link} to=\"/news\">\n          <ListItem button>\n            <ListItemIcon>\n              <AnnouncementIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"News\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link className={classes.title} to=\"/\">\n            <Typography variant=\"h6\">🦠 COVID-19</Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <div className={classes.toolbar} />\n      <Container maxWidth=\"lg\">\n        {children}\n        <Divider style={{ marginTop: 32 }} />\n        <h4 style={{ marginTop: 32 }}>\n          Sources:{\" \"}\n          <a\n            className={classes.link}\n            href=\"https://github.com/CSSEGISandData/COVID-19\"\n          >\n            2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns\n            Hopkins CSSE{\" \"}\n          </a>\n        </h4>\n      </Container>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  container: PropTypes.any\n};\n\nexport default Layout;\n","export function FormatNumber(number) {\n  try {\n    return new Intl.NumberFormat(\"en-US\").format(number);\n  } catch (error) {\n    return 0;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n//colors\nimport red from \"@material-ui/core/colors/red\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport green from \"@material-ui/core/colors/green\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    display: \"grid\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  cases: {\n    color: yellow[\"700\"]\n  },\n  death: {\n    color: red[\"700\"]\n  },\n  recovered: {\n    color: green[\"700\"]\n  }\n}));\n\nexport default function Tracker(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {data ? (\n        <Grid container spacing={3}>\n          <Tooltip title=\"Confirmed\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <h3 className={classes.cases}>\n                  <span role=\"img\"> 🤒</span>{\" \"}\n                  {FormatNumber(data.latest[\"confirmed\"])}\n                </h3>\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Deaths\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <h3 className={classes.death}>\n                  <span role=\"img\"> 💀</span>{\" \"}\n                  {FormatNumber(data.latest[\"deaths\"])}\n                </h3>\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Recovered\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <h3 className={classes.recovered}>\n                  <span role=\"img\"> ✅</span>{\" \"}\n                  {FormatNumber(data.latest[\"recovered\"])}\n                </h3>\n              </Paper>\n            </Grid>\n          </Tooltip>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: 32\n  },\n  table: {\n    minWidth: 650\n  },\n  link: {\n    color: theme.palette.text.primary,\n    textDecoration: \"inherit\"\n  }\n}));\n\nexport default function CountryTable(props) {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  return data ? (\n    <>\n      <h3>Click on a Country to open a detailed view.</h3>\n      <TableContainer component={Paper} className={classes.container}>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Country</TableCell>\n              <TableCell>Province</TableCell>\n              <TableCell>Confirmed</TableCell>\n              <TableCell>Deaths</TableCell>\n              <TableCell>Recovered</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.confirmed.locations.map((row, index) => (\n              <TableRow key={row.name} key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    className={classes.link}\n                    to={`/country/${\n                      row.province\n                        ? `${row.country}/${row.province}`\n                        : row.country\n                    }`}\n                  >\n                    {row.country}\n                  </Link>\n                </TableCell>\n                <TableCell>{row.province}</TableCell>\n                <TableCell>{row.latest}</TableCell>\n                <TableCell>{data.deaths.locations[index].latest}</TableCell>\n                <TableCell>{data.recovered.locations[index].latest}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"translate(14px, 17px) scale(1.2)\"\n    }\n  }\n}));\n\nexport default function News(props) {\n  const classes = useStyles();\n  const { country } = props;\n\n  const data = useFetch(\n    `https://newsapi.org/v2/top-headlines?q=corona&country=${\n      country ? country.toLowerCase() : \"us\"\n    }&pageSize=10&apiKey=a91facb09c9444c4a2797a5ac993dc57`,\n    `news${country ? country.toLowerCase() : \"\"}`\n  );\n\n  console.log(\"NEWS\", data);\n  console.log(\"NEWS COUNTRY CODE\", country);\n  return (\n    <List className={classes.root}>\n      {data &&\n        data.articles &&\n        data.articles.map((item, index) => (\n          <a\n            key={index}\n            href={item.url}\n            target=\"_blank\"\n            className={classes.link}\n          >\n            <article>\n              <ListItem key={index} alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar alt=\"Remy Sharp\" src={item.urlToImage} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={item.title}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\"\n                      >\n                        {item.source.name}, {item.author} {\"\"}\n                      </Typography>\n                      {item.description}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            </article>\n            {index !== 9 && <Divider variant=\"inset\" component=\"li\" />}\n          </a>\n        ))}\n    </List>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable import/no-unresolved, import/extensions, import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  FacebookShareCount,\n  RedditShareCount,\n  FacebookShareButton,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  EmailShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  ViberShareButton,\n  WorkplaceShareButton,\n  LineShareButton,\n  PocketShareButton,\n  InstapaperShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  WhatsappIcon,\n  RedditIcon,\n  MailruIcon,\n  EmailIcon,\n  LivejournalIcon,\n  ViberIcon,\n  WorkplaceIcon,\n  LineIcon,\n  PocketIcon,\n  InstapaperIcon\n} from \"react-share\";\n\nclass Share extends Component {\n  render() {\n    const shareUrl = document.URL;\n    const title = document.title;\n\n    console.log(\"DOCUMENT URL\", shareUrl);\n    console.log(\"DOCUMENT TITLE\", title);\n\n    return (\n      <>\n        <h1>Share this page</h1>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n\n            <FacebookShareCount\n              url={shareUrl}\n              className=\"Demo__some-network__share-count\"\n            >\n              {count => count}\n            </FacebookShareCount>\n          </Grid>\n          <Grid item xs>\n            <TwitterShareButton url={shareUrl} title={title}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <TelegramShareButton url={shareUrl} title={title}>\n              <TelegramIcon size={32} round />\n            </TelegramShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <WhatsappShareButton url={shareUrl} title={title} separator=\":: \">\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <LinkedinShareButton url={shareUrl}>\n              <LinkedinIcon size={32} round />\n            </LinkedinShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <RedditShareButton\n              url={shareUrl}\n              title={title}\n              windowWidth={660}\n              windowHeight={460}\n            >\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n\n            <div>\n              <RedditShareCount\n                url={shareUrl}\n                className=\"Demo__some-network__share-count\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs>\n            <MailruShareButton url={shareUrl} title={title}>\n              <MailruIcon size={32} round />\n            </MailruShareButton>\n          </Grid>\n          <Grid item xs>\n            <EmailShareButton url={shareUrl} subject={title} body=\"body\">\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n          </Grid>\n          <Grid item xs>\n            <ViberShareButton url={shareUrl} title={title}>\n              <ViberIcon size={32} round />\n            </ViberShareButton>\n          </Grid>\n          <Grid item xs>\n            <WorkplaceShareButton url={shareUrl} quote={title}>\n              <WorkplaceIcon size={32} round />\n            </WorkplaceShareButton>\n          </Grid>\n          <Grid item xs>\n            <LineShareButton url={shareUrl} title={title}>\n              <LineIcon size={32} round />\n            </LineShareButton>\n          </Grid>\n          <Grid item xs>\n            <PocketShareButton url={shareUrl} title={title}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </Grid>\n          <Grid item xs>\n            <InstapaperShareButton url={shareUrl} title={title}>\n              <InstapaperIcon size={32} round />\n            </InstapaperShareButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Share;\n","import React from \"react\";\nimport { createHashHistory } from \"history\";\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\nimport { Tooltip as LToolTip } from \"react-leaflet\";\n\nconst calculateRadius = (cases, multiplier, min, max) => {\n  // Calculate radius.\n  const radius = cases * multiplier; // Check for min and max.\n\n  if (radius < min) return min;\n  if (radius > max) return max; // Return radius.\n\n  return radius;\n};\n\nconst history = createHashHistory();\n\nconst MapComponent = props => {\n  const { data } = props;\n\n  return (\n    <>\n      {data && (\n        <Map\n          style={{\n            height: \"600px\",\n            marginTop: \"32px\"\n          }}\n          center={[51.505, -0.09]}\n          zoom={3.5}\n          maxZoom={12}\n          minZoom={3}\n          attributionControl={false}\n          zoomControl={false}\n          maxBoundsViscosity={0.7}\n          useFlyTo\n        >\n          <TileLayer url=\"https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png\" />\n          {data.confirmed.locations.map((location, index) => (\n            <Circle\n              key={index}\n              center={[location.coordinates.lat, location.coordinates.long]}\n              radius={calculateRadius(location.latest, 25, 15000, 500000)}\n              color=\"red\"\n              fillColor=\"#f03\"\n              fillOpacity={0.5}\n            >\n              <LToolTip>\n                <h4>\n                  <b>{location.province || location.country}</b>\n                  <br />\n                  <b>Confirmed cases: {location.latest}</b>\n                </h4>\n              </LToolTip>\n            </Circle>\n          ))}\n        </Map>\n      )}\n    </>\n  );\n};\n\nexport default MapComponent;\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    display: \"grid\",\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Mortality = props => {\n  const classes = useStyles();\n  const { data } = props;\n  const calculateMortality = () => {\n    return data\n      ? `${((data.latest.deaths / data.latest.confirmed) * 100).toFixed(2)}`\n      : \"-\";\n  };\n\n  const tooltip =\n    \"How the Mortality rate is calculated: \\n (deaths / confirmed) * 100)\";\n\n  return (\n    <Grid container spacing={0}>\n      <Tooltip title={tooltip}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <h1>Mortality rate: {calculateMortality()}%</h1>\n          </Paper>\n        </Grid>\n      </Tooltip>\n    </Grid>\n  );\n};\nexport default Mortality;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport Tracker from \"../../components/Tracker\";\nimport CountryTable from \"../../components/Table\";\nimport News from \"../../components/News\";\nimport Share from \"../../components/Share\";\nimport Map from \"../../components/Map\";\nimport Mortality from \"../../components/Mortality\";\n\nexport default function Home(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <Mortality data={data} />\n      <Tracker data={data} />\n      <h4>\n        * Note: Some countries are running out of test kits and/or are not\n        reporting all cases. Numbers may be inaccurate.\n      </h4>\n      <Map data={data} />\n      <Share />\n      <h1>Latest Worldwide Data</h1>\n      <CountryTable data={data} />\n      <h1>Latest Worldwide News</h1>\n      <News />\n    </Layout>\n  );\n}\n","export function toDateValuePair(locationHistoryEntry) {\n  console.log(\n    \"toDateValuePair value\",\n    Object.entries(locationHistoryEntry)[0][0]\n  );\n  const dateParts = Object.entries(locationHistoryEntry)[0][1].split(\"/\");\n  const year = Number.parseInt(\"20\" + dateParts[2], 10);\n  const month = Number.parseInt(dateParts[0], 10) - 1;\n  const day = Number.parseInt(dateParts[1], 10);\n\n  return {\n    date: new Date(year, month, day),\n    value: Number.parseInt(locationHistoryEntry[1], 10)\n  };\n}\n\nexport function mapLocationToChartSeries(location) {\n  console.log(\"mapLocationToChart value\", location);\n  const dateValuePairs = Object.entries(location.history)\n    .map(location => toDateValuePair(location))\n    .sort((a, b) => a.date - b.date);\n\n  const firstDate = dateValuePairs[0].date;\n\n  console.log(\"CHART FIRST DATA\", dateValuePairs);\n\n  return {\n    name: location.country,\n    data: dateValuePairs.map(pair => pair.value),\n    pointStart: Date.UTC(\n      firstDate.getFullYear(),\n      firstDate.getMonth(),\n      firstDate.getDate()\n    ),\n    pointInterval: 24 * 3600 * 1000 // one day;\n  };\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n\n    let options = {};\n    if (\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n      let options = {\n        chart: {\n          height: 400,\n          type: \"line\",\n          zoomType: \"x\",\n          backgroundColor: \"#303030\"\n        },\n        title: {\n          text: `Coronavirus confirmed cases in ${this.props.country}`,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        xAxis: {\n          type: \"datetime\"\n        },\n        yAxis: {\n          title: {\n            text: \"Confirmed cases\"\n          }\n        },\n        plotOptions: {\n          series: {\n            dataLabels: {\n              enabled: true,\n              formatter: function() {\n                if (this.y > 0) {\n                  return this.y;\n                } else {\n                  return null;\n                }\n              }\n            }\n          }\n        },\n        series: [\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.country\n            )\n          )\n          // mapLocationToChartSeries(\n          //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n          // )\n        ]\n      };\n      this.setState({ options });\n      this.setState({ loading: false });\n    } else {\n      let options = {\n        chart: {\n          height: 400,\n          type: \"line\",\n          zoomType: \"x\"\n        },\n        title: {\n          text: `Coronavirus confirmed cases in ${this.props.country}`\n        },\n        xAxis: {\n          type: \"datetime\"\n        },\n        yAxis: {\n          title: {\n            text: \"Confirmed cases\"\n          }\n        },\n        plotOptions: {\n          series: {\n            dataLabels: {\n              enabled: true,\n              formatter: function() {\n                if (this.y > 0) {\n                  return this.y;\n                } else {\n                  return null;\n                }\n              }\n            }\n          }\n        },\n        series: [\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.country\n            )\n          )\n          // mapLocationToChartSeries(\n          //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n          // )\n        ]\n      };\n      this.setState({ options });\n      this.setState({ loading: false });\n    }\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.setState({ loading: false });\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Map, TileLayer, Circle } from \"react-leaflet\";\nimport { Tooltip as LToolTip } from \"react-leaflet\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Helmet } from \"react-helmet\";\n\n//colors\n\nimport red from \"@material-ui/core/colors/red\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport green from \"@material-ui/core/colors/green\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart\";\nimport News from \"../../components/News\";\nimport Share from \"../../components/Share\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  cases: {\n    color: yellow[\"700\"]\n  },\n  death: {\n    color: red[\"700\"]\n  },\n  recovered: {\n    color: green[\"700\"]\n  }\n}));\n\nconst calculateRadius = (cases, multiplier, min, max) => {\n  // Calculate radius.\n  const radius = cases * multiplier; // Check for min and max.\n\n  if (radius < min) return min;\n  if (radius > max) return max; // Return radius.\n\n  return radius;\n};\n\nexport default function Country(props) {\n  let { country, province } = useParams();\n  const { data } = props;\n  ReactGA.pageview(`/country/${country}`);\n\n  const [confirmed, setConfirmed] = useState();\n  const [deaths, setDeaths] = useState();\n  const [recovered, setRecovered] = useState();\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmed(\n      data.confirmed.locations.find(location =>\n        province\n          ? province && location.province === province\n          : location.country === country\n      )\n    );\n    setDeaths(\n      data.deaths.locations.find(location =>\n        province\n          ? province && location.province === province\n          : location.country === country\n      )\n    );\n    setRecovered(\n      data.recovered.locations.find(location =>\n        province\n          ? province && location.province === province\n          : location.country === country\n      )\n    );\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n      console.log(\"Province\", province);\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      {data && confirmed && deaths && recovered && (\n        <Helmet>\n          <title>{`${\n            province ? `${country} - ${province}` : country\n          } | COVID-19`}</title>\n          <meta\n            name=\"title\"\n            content={`${\n              province ? `${country} - ${province}` : country\n            } | COVID-19`}\n          />\n          <meta\n            name=\"description\"\n            content={`${\n              province ? `${country} - ${province}` : country\n            }: Confirmed ${FormatNumber(\n              confirmed[\"latest\"]\n            )}, Deaths: ${FormatNumber(\n              deaths[\"latest\"]\n            )}, Recovered: ${FormatNumber(recovered[\"latest\"])}| COVID-19`}\n          />\n          <meta\n            name=\"keywords\"\n            content={`\n            corona, coronavirus, coronavirus in ${country}, coronavirus in ${province}, covid19, corona in ${country}, corona in ${province}, covid19 in ${country}, covid19 in ${province}, corona ${country}, corona ${province}, coronavirus ${country}, coronavirus ${province}, coronavirus tracker, coronavirus numbers, corona numbers, corona tracker, corona map, coronavirus map\n            `}\n          ></meta>\n        </Helmet>\n      )}\n      <div className={classes.root}>\n        <h1>{province ? `${country} - ${province}` : country}</h1>\n        {data && confirmed && deaths && recovered ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.cases}>\n                      <span role=\"img\"> 🤒</span>{\" \"}\n                      {FormatNumber(confirmed[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.deaths}>\n                      <span role=\"img\"> 💀</span>{\" \"}\n                      {FormatNumber(deaths[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.recovered}>\n                      <span role=\"img\"> ✅</span>{\" \"}\n                      {FormatNumber(recovered[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} country={country} />\n\n            <Map\n              style={{\n                height: \"600px\",\n                marginTop: \"32px\"\n              }}\n              center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n              zoom={6}\n              maxZoom={12}\n              minZoom={3}\n              attributionControl={false}\n              zoomControl={false}\n              maxBoundsViscosity={0.7}\n              useFlyTo\n            >\n              <TileLayer url=\"https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png\" />\n              <Circle\n                center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n                radius={calculateRadius(confirmed.latest, 25, 15000, 500000)}\n                color=\"red\"\n                fillColor=\"#f03\"\n                fillOpacity={0.5}\n              >\n                <LToolTip>\n                  <h4>\n                    <b>{confirmed.province || confirmed.country}</b>\n                    <br />\n                    <b>Confirmed cases: {confirmed.latest}</b>\n                  </h4>\n                </LToolTip>\n              </Circle>\n            </Map>\n            <Share />\n            <h1>Country Specific News:</h1>\n            <News country={confirmed.country_code} />\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nconst useStyles = makeStyles(theme => ({\n  country: {\n    color: theme.palette.text.primary\n  }\n}));\n\nexport default function Countries(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/countries\");\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState();\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (data) {\n      const results = data.confirmed.locations.filter(item =>\n        item.country.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setSearchResults(results);\n      console.log(\"RESULTS\", results);\n    }\n  }, [searchTerm]);\n\n  return (\n    <Layout>\n      <h1>Country List</h1>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            style={{ marginBottom: 32 }}\n            fullWidth\n            label=\"Search\"\n            value={searchTerm}\n            onChange={handleChange}\n          />\n        </Grid>\n        {searchResults &&\n          searchResults.map((country, index) => (\n            <Grid item xs key={index} style={{ textAlign: \"center\" }}>\n              <Link\n                to={`/country/${\n                  country.province\n                    ? `${country.country}/${country.province}`\n                    : country.country\n                }`}\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                <span\n                  role=\"img\"\n                  style={{\n                    display: \"inline-block\",\n                    fontSize: \"3em\",\n                    lineHeight: \"1em\",\n                    verticalAlign: \"middle\"\n                  }}\n                >\n                  {country.country_code\n                    .toUpperCase()\n                    .replace(/./g, char =>\n                      String.fromCodePoint(char.charCodeAt(0) + 127397)\n                    )}\n                </span>\n                <h3 className={classes.country}>\n                  {country.province ? country.province : country.country}\n                </h3>\n              </Link>\n            </Grid>\n          ))}\n      </Grid>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport CountryTable from \"../../components/Table\";\n\nexport default function Worldwide(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/worldwide\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\n//components\nimport Layout from \"../../components/Layout\";\nimport News from \"../../components/News\";\n\nexport default function NewsView() {\n  ReactGA.pageview(\"/news\");\n  return (\n    <Layout>\n      <h1>Worldwide News</h1>\n      <TwitterTimelineEmbed\n        sourceType=\"profile\"\n        screenName=\"bnodesk\"\n        theme=\"dark\"\n        options={{ height: 800 }}\n      />\n      <News />\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Help from \"@material-ui/icons/Help\";\n\n//Components\nimport Layout from \"../../components/Layout\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function FAQItem(props) {\n  const { title, content } = props;\n  ReactGA.pageview(\"/faq\");\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Layout>\n      <List component=\"nav\" className={classes.root}>\n        <ListItem button onClick={handleClick}>\n          <ListItemIcon>\n            <Help />\n          </ListItemIcon>\n          <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button>\n              <p>{content}</p>\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//Components\nimport Layout from \"../../components/Layout\";\nimport FAQItem from \"../../components/FAQItem\";\n\nexport default function FAQ() {\n  ReactGA.pageview(\"/faq\");\n\n  return (\n    <Layout>\n      <h1>Q&A on coronaviruses (COVID-19)</h1>\n      <FAQItem\n        title=\"What is a coronavirus?\"\n        content=\"Coronaviruses are a large family of viruses which may cause illness in animals or humans.  In humans, several coronaviruses are known to cause respiratory infections ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS). The most recently discovered coronavirus causes coronavirus disease COVID-19.\"\n      />\n      <FAQItem\n        title=\"What is COVID-19?\"\n        content=\"COVID-19 is the infectious disease caused by the most recently discovered coronavirus. This new virus and disease were unknown before the outbreak began in Wuhan, China, in December 2019. \"\n      />\n      <FAQItem\n        title=\"What are the symptoms of COVID-19?\"\n        content=\"The most common symptoms of COVID-19 are fever, tiredness, and dry cough. Some patients may have aches and pains, nasal congestion, runny nose, sore throat or diarrhea. These symptoms are usually mild and begin gradually. Some people become infected but don’t develop any symptoms and don't feel unwell. Most people (about 80%) recover from the disease without needing special treatment. Around 1 out of every 6 people who gets COVID-19 becomes seriously ill and develops difficulty breathing. Older people, and those with underlying medical problems like high blood pressure, heart problems or diabetes, are more likely to develop serious illness. People with fever, cough and difficulty breathing should seek medical attention.\"\n      />\n      <FAQItem\n        title=\"How does COVID-19 spread?\"\n        content=\"People can catch COVID-19 from others who have the virus. The disease can spread from person to person through small droplets from the nose or mouth which are spread when a person with COVID-19 coughs or exhales. These droplets land on objects and surfaces around the person. Other people then catch COVID-19 by touching these objects or surfaces, then touching their eyes, nose or mouth. People can also catch COVID-19 if they breathe in droplets from a person with COVID-19 who coughs out or exhales droplets. This is why it is important to stay more than 1 meter (3 feet) away from a person who is sick. WHO is assessing ongoing research on the ways COVID-19 is spread and will continue to share updated findings. Can the virus that causes COVID-19 be transmitted through the air? Studies to date suggest that the virus that causes COVID-19 is mainly transmitted through contact with respiratory droplets rather than through the air.  See previous answer on “How does COVID-19 spread?” Can CoVID-19 be caught from a person who has no symptoms? The main way the disease spreads is through respiratory droplets expelled by someone who is coughing. The risk of catching COVID-19 from someone with no symptoms at all is very low. However, many people with COVID-19 experience only mild symptoms. This is particularly true at the early stages of the disease. It is therefore possible to catch COVID-19 from someone who has, for example, just a mild cough and does not feel ill.  WHO is assessing ongoing research on the period of transmission of COVID-19 and will continue to share updated findings. Can I catch COVID-19 from the feces of someone with the disease? The risk of catching COVID-19 from the feces of an infected person appears to be low. While initial investigations suggest the virus may be present in feces in some cases, spread through this route is not a main feature of the outbreak. WHO is assessing ongoing research on the ways COVID-19 is spread and will continue to share new findings. Because this is a risk, however, it is another reason to clean hands regularly, after using the bathroom and before eating. \"\n      />\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createBrowserHistory } from \"history\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nconst history = createBrowserHistory();\n\nexport default function NotFound() {\n  useEffect(() => {\n    setTimeout(() => {\n      history.goBack();\n    }, 5000);\n  });\n  return (\n    <Layout>\n      <h1>Error: Not found.</h1>\n      <h3>Redirecting you back to previous page in 5 sec...</h3>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Helmet } from \"react-helmet\";\n\n//colors\n\nimport red from \"@material-ui/core/colors/red\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport green from \"@material-ui/core/colors/green\";\n\n// Helpers\n\n//components\nimport Layout from \"../../components/Layout\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  cases: {\n    color: yellow[\"700\"]\n  },\n  death: {\n    color: red[\"700\"]\n  },\n  recovered: {\n    color: green[\"700\"]\n  }\n}));\n\nexport default function Compare(props) {\n  const { data } = props;\n  ReactGA.pageview(`/compare`);\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Compare Countries | COVID-19</title>\n        <meta name=\"title\" content=\"Compare Countries| COVID-19\" />\n      </Helmet>\n\n      <div className={classes.root}>\n        <h1>Compare Countries</h1>\n        <>\n          <h2>JJJJJ</h2>\n        </>\n      </div>\n    </Layout>\n  );\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  configureOptions = () => {\n    let options = {};\n    if (\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n      let options = {\n        chart: {\n          height: 400,\n          type: \"line\",\n          zoomType: \"x\",\n          backgroundColor: \"#303030\"\n        },\n        title: {\n          text: `Comparing cases from countries: ${this.props.countryX} & ${this.props.countryY}`,\n          style: {\n            color: \"#fff\"\n          }\n        },\n        xAxis: {\n          type: \"datetime\"\n        },\n        yAxis: {\n          title: {\n            text: \"Confirmed cases\"\n          }\n        },\n        plotOptions: {\n          series: {\n            dataLabels: {\n              enabled: true,\n              formatter: function() {\n                if (this.y > 0) {\n                  return this.y;\n                } else {\n                  return null;\n                }\n              }\n            }\n          }\n        },\n        series: [\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.countryX\n            )\n          ),\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.countryY\n            )\n          )\n          // mapLocationToChartSeries(\n          //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n          // )\n        ]\n      };\n\n      this.setState({ options });\n      this.setState({ loading: false });\n    } else {\n      let options = {\n        chart: {\n          height: 400,\n          type: \"line\",\n          zoomType: \"x\"\n        },\n        title: {\n          text: `Comparing cases from countries: ${this.props.countryX} & ${this.props.countryY}`\n        },\n        xAxis: {\n          type: \"datetime\"\n        },\n        yAxis: {\n          title: {\n            text: \"Confirmed cases\"\n          }\n        },\n        plotOptions: {\n          series: {\n            dataLabels: {\n              enabled: true,\n              formatter: function() {\n                if (this.y > 0) {\n                  return this.y;\n                } else {\n                  return null;\n                }\n              }\n            }\n          }\n        },\n        series: [\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.countryX\n            )\n          ),\n          mapLocationToChartSeries(\n            this.props.data.confirmed.locations.find(\n              _ => _.country === this.props.countryY\n            )\n          )\n\n          // mapLocationToChartSeries(\n          //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n          // )\n        ]\n      };\n      this.setState({ options });\n      this.setState({ loading: false });\n    }\n  };\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n    this.configureOptions();\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.configureOptions();\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Helmet } from \"react-helmet\";\n\n//colors\n\nimport red from \"@material-ui/core/colors/red\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport green from \"@material-ui/core/colors/green\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart/compare\";\n\nimport Share from \"../../components/Share\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  cases: {\n    color: yellow[\"700\"]\n  },\n  death: {\n    color: red[\"700\"]\n  },\n  recovered: {\n    color: green[\"700\"]\n  }\n}));\n\nconst toPercentage = function(arr) {\n  return arr.map(function(d, i) {\n    const decreaseValue = arr[i - 1] - arr[i];\n    //return (100 * d) / arr.reduce((a, b) => a + b, 0);\n    // return arr.reduce((a, b) => a + b);\n    return Math.abs(((decreaseValue / arr[i - 1]) * 100).toFixed(0)) || 0;\n  })[arr.length - 1];\n};\n\nexport default function CompareDetail(props) {\n  let { countryX, countryY } = useParams();\n  const { data } = props;\n  ReactGA.pageview(`/compare/${countryX}/${countryY}`);\n\n  //CountryX\n  const [confirmedX, setConfirmedX] = useState();\n  const [deathsX, setDeathsX] = useState();\n  const [recoveredX, setRecoveredX] = useState();\n\n  //CountryY\n  const [confirmedY, setConfirmedY] = useState();\n  const [deathsY, setDeathsY] = useState();\n  const [recoveredY, setRecoveredY] = useState();\n\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmedX(\n      data.confirmed.locations.find(location => location.country === countryX)\n    );\n    setDeathsX(\n      data.deaths.locations.find(location => location.country === countryX)\n    );\n    setRecoveredX(\n      data.recovered.locations.find(location => location.country === countryX)\n    );\n    setConfirmedY(\n      data.confirmed.locations.find(location => location.country === countryY)\n    );\n    setDeathsY(\n      data.deaths.locations.find(location => location.country === countryY)\n    );\n    setRecoveredY(\n      data.recovered.locations.find(location => location.country === countryY)\n    );\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n      if (countryX) {\n        console.log();\n      }\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      {data && confirmedX && deathsX && recoveredX && (\n        <Helmet>\n          <title>Compare Countries| COVID-19</title>\n          <meta name=\"title\" content=\"Compare Countries| COVID-19\" />\n        </Helmet>\n      )}\n      <div className={classes.root}>\n        <h1>Compare Countries</h1>\n        {data && confirmedX && deathsX && recoveredX ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <h2>{countryX}</h2>\n            <h4>\n              Increase since yesterday:{\" \"}\n              {toPercentage(\n                Object.values(confirmedX.history).sort((a, b) => a - b)\n              )}\n              %\n            </h4>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.cases}>\n                      <span role=\"img\"> 🤒</span>{\" \"}\n                      {FormatNumber(confirmedX[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.deaths}>\n                      <span role=\"img\"> 💀</span>{\" \"}\n                      {FormatNumber(deathsX[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.recovered}>\n                      <span role=\"img\"> ✅</span>{\" \"}\n                      {FormatNumber(recoveredX[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <h2>{countryY}</h2>\n            <h4>\n              Increase since yesterday:{\" \"}\n              {toPercentage(\n                Object.values(confirmedY.history).sort((a, b) => a - b)\n              )}\n              %\n            </h4>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.cases}>\n                      <span role=\"img\"> 🤒</span>{\" \"}\n                      {FormatNumber(confirmedY[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.deaths}>\n                      <span role=\"img\"> 💀</span>{\" \"}\n                      {FormatNumber(deathsY[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    <h3 className={classes.recovered}>\n                      <span role=\"img\"> ✅</span>{\" \"}\n                      {FormatNumber(recoveredY[\"latest\"])}\n                    </h3>\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} countryX={countryX} countryY={countryY} />\n            <Share />\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport CImage from \"../../assets/images/banner.png\";\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <meta\n            name=\"description\"\n            content=\"Live statistics and coronavirus news tracking the number of confirmed cases, recovered patients, and death toll by country due to the COVID 19 coronavirus from Wuhan, China. Coronavirus counter with new cases, historical data, and info. Daily charts, graphs, news and updates\"\n          />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta property=\"og:title\" content=\"Corona Virus Tracker | COVID-19\" />\n          <meta\n            property=\"og:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"og:image\" content={CImage} />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            property=\"twitter:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta\n            property=\"twitter:title\"\n            content=\"Corona Virus Tracker | COVID-19\"\n          />\n          <meta\n            property=\"twitter:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"twitter:image\" content={CImage} />\n          <meta\n            name=\"keywords\"\n            content={`\n            corona, coronavirus, coronavirus in nederland, covid19, corona in, covid19 in , covid19 in, corona, corona, coronavirus, coronavirus, coronavirus tracker, coronavirus numbers, corona numbers, corona tracker, corona map, coronavirus map\n            `}\n          ></meta>\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tags;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\n//views\nimport Home from \"./Home\";\nimport Country from \"./Country\";\nimport Countries from \"./Countries\";\nimport Worldwide from \"./Worldwide\";\nimport News from \"./News\";\nimport FAQ from \"./FAQ\";\nimport NotFound from \"./NotFound\";\nimport Compare from \"./Compare\";\nimport CompareDetail from \"./Compare/detail\";\n\n//components\nimport Tags from \"../components/Tags\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\nimport history from \"../helpers/history\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  const data = useFetch(\n    `https://coronavirus-tracker-api.herokuapp.com/all`,\n    \"items\"\n  );\n\n  if (process.env.REACT_APP_STAGE === \"PROD\") {\n    console.log = function no_console() {};\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Tags />\n      <Router basename=\"/\" history={history}>\n        <Route component={ScrollToTop} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home data={data} />\n          </Route>\n          <Route exact path=\"/worldwide\">\n            <Worldwide data={data} />\n          </Route>\n          <Route exact path=\"/countries\">\n            <Countries data={data} />\n          </Route>\n          <Route exact path=\"/news\">\n            <News />\n          </Route>\n          <Route exact path=\"/faq\">\n            <FAQ />\n          </Route>\n          <Route exact path=\"/country/:country\">\n            <Country data={data} />\n          </Route>\n          <Route exact path=\"/country/:country/:province\">\n            <Country data={data} />\n          </Route>\n          <Route exact path=\"/compare\">\n            <Compare data={data} />\n          </Route>\n          <Route exact path=\"/compare/:countryX/:countryY\">\n            <CompareDetail data={data} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst ScrollToTop = () => {\n  window.scrollTo(0, 0);\n  return null;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactGA.initialize(\"UA-37850527-11\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/banner.2d30a510.png\";"],"sourceRoot":""}