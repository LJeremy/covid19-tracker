{"version":3,"sources":["components/Layout/index.js","helpers/index.js","components/Tracker/index.js","components/Table/index.js","components/News/index.js","components/Share/index.js","views/Home/index.js","helpers/chart.js","components/Chart/index.js","views/Country/index.js","views/Countries/index.js","views/Worldwide/index.js","views/News/index.js","views/NotFound/index.js","components/Tags/index.js","helpers/history.js","serviceWorker.js","index.js","views/routes.js","assets/images/banner.png"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Layout","props","classes","useTheme","children","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","style","textDecoration","to","Typography","variant","title","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","Container","maxWidth","FormatNumber","number","Intl","NumberFormat","format","error","textAlign","palette","text","secondary","Tracker","data","Grid","container","Tooltip","item","xs","Paper","latest","CircularProgress","marginTop","table","minWidth","CountryTable","TableContainer","component","Table","size","TableHead","TableRow","TableCell","TableBody","confirmed","locations","map","row","index","key","name","scope","country","province","deaths","recovered","backgroundColor","background","inline","link","cursor","transform","News","useFetch","console","log","articles","href","url","target","ListItemAvatar","Avatar","alt","src","urlToImage","Fragment","source","author","description","Share","shareUrl","document","URL","FacebookShareButton","quote","FacebookIcon","round","FacebookShareCount","count","FacebookMessengerShareButton","appId","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","windowWidth","windowHeight","RedditIcon","RedditShareCount","LivejournalShareButton","LivejournalIcon","MailruShareButton","MailruIcon","EmailShareButton","subject","body","EmailIcon","ViberShareButton","ViberIcon","WorkplaceShareButton","WorkplaceIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","InstapaperShareButton","InstapaperIcon","Component","Home","ReactGA","pageview","mapLocationToChartSeries","location","dateValuePairs","Object","entries","history","locationHistoryEntry","dateParts","split","year","Number","parseInt","month","day","date","Date","value","toDateValuePair","sort","a","b","firstDate","pair","pointStart","UTC","getFullYear","getMonth","getDate","pointInterval","Chart","componentDidMount","options","chart","height","type","zoomType","xAxis","yAxis","legend","layout","align","verticalAlign","series","find","_","setState","loading","state","nextProps","prevProps","this","highcharts","Highcharts","marginBottom","Country","useParams","setConfirmed","setDeaths","setRecovered","lastUpdated","setUpdated","useEffect","undefined","parse","last_updated","toString","Map","center","coordinates","lat","long","zoom","TileLayer","attribution","Countries","searchTerm","setSearchTerm","searchResults","setSearchResults","results","filter","toLowerCase","includes","TextField","label","onChange","event","role","fontSize","lineHeight","country_code","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","Worldwide","NewsView","NotFound","Tags","Helmet","property","CImage","createBrowserHistory","Boolean","window","hostname","match","initialize","ReactDOM","render","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","basename","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2342c226.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport Container from \"@material-ui/core/Container\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nexport default function Layout(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { children } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link style={{ textDecoration: \"inherit\", color: \"white\" }} to=\"/\">\n            <Typography variant=\"h6\" className={classes.title}>\n              🦠 COVID-19\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link style={{ textDecoration: \"inherit\", color: \"white\" }} to=\"/\">\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n        <List>\n          <Link\n            style={{ textDecoration: \"inherit\", color: \"white\" }}\n            to=\"/worldwide\"\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <PublicIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Worldwide\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n        <List>\n          <Link\n            style={{ textDecoration: \"inherit\", color: \"white\" }}\n            to=\"/countries\"\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <FormatListNumberedIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Country List\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n        <List>\n          <Link\n            style={{ textDecoration: \"inherit\", color: \"white\" }}\n            to=\"/news\"\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <AnnouncementIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"News\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Container maxWidth=\"lg\">{children}</Container>\n      </main>\n    </div>\n  );\n}\n","export function FormatNumber(number) {\n  try {\n    return new Intl.NumberFormat(\"en-US\").format(number);\n  } catch (error) {\n    return 0;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Tracker(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {data ? (\n        <Grid container spacing={3}>\n          <Tooltip title=\"Confirmed\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                🤒 {FormatNumber(data.latest[\"confirmed\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Deaths\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                💀 {FormatNumber(data.latest[\"deaths\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Recovered\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                ✅ {FormatNumber(data.latest[\"recovered\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 32\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function CountryTable(props) {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  return data ? (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell>Province</TableCell>\n            <TableCell>Confirmed</TableCell>\n            <TableCell>Deaths</TableCell>\n            <TableCell>Recovered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.confirmed.locations.map((row, index) => (\n            <TableRow key={row.name} key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link\n                  style={{ color: \"white\", textDecoration: \"inherit\" }}\n                  to={`/country/${row.country}`}\n                >\n                  {row.country}\n                </Link>\n              </TableCell>\n              <TableCell>{row.province}</TableCell>\n              <TableCell>{row.latest}</TableCell>\n              <TableCell>{data.deaths.locations[index].latest}</TableCell>\n              <TableCell>{data.recovered.locations[index].latest}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"translate(14px, 17px) scale(1.2)\"\n    }\n  }\n}));\n\nexport default function News(props) {\n  const classes = useStyles();\n  const { country } = props;\n\n  const data = useFetch(\n    `https://newsapi.org/v2/everything?language=en&q=covid19&sortBy=publishedAt&pageSize=10&apiKey=a91facb09c9444c4a2797a5ac993dc57`,\n    \"news\"\n  );\n\n  console.log(\"NEWS\", data);\n  return (\n    <List className={classes.root}>\n      {data &&\n        data.articles.map((item, index) => (\n          <a href={item.url} target=\"_blank\" className={classes.link}>\n            <ListItem key={index} alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.urlToImage} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={item.title}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {item.source.name}, {item.author} {\"\"}\n                    </Typography>\n                    {item.description}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            {index !== 9 && <Divider variant=\"inset\" component=\"li\" />}\n          </a>\n        ))}\n    </List>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable import/no-unresolved, import/extensions, import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  FacebookShareCount,\n  RedditShareCount,\n  FacebookShareButton,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  EmailShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  ViberShareButton,\n  WorkplaceShareButton,\n  LineShareButton,\n  PocketShareButton,\n  InstapaperShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  WhatsappIcon,\n  RedditIcon,\n  MailruIcon,\n  EmailIcon,\n  LivejournalIcon,\n  ViberIcon,\n  WorkplaceIcon,\n  LineIcon,\n  PocketIcon,\n  InstapaperIcon\n} from \"react-share\";\n\nclass Share extends Component {\n  render() {\n    const shareUrl = document.URL;\n    const title = document.title;\n\n    console.log(\"DOCUMENT URL\", shareUrl);\n    console.log(\"DOCUMENT TITLE\", title);\n\n    return (\n      <>\n        <h1>Share this page</h1>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n\n            <FacebookShareCount\n              url={shareUrl}\n              className=\"Demo__some-network__share-count\"\n            >\n              {count => count}\n            </FacebookShareCount>\n          </Grid>\n          <Grid item xs>\n            <FacebookMessengerShareButton\n              url={shareUrl}\n              appId=\"521270401588372\"\n            >\n              <FacebookMessengerIcon size={32} round />\n            </FacebookMessengerShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <TwitterShareButton url={shareUrl} title={title}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <TelegramShareButton url={shareUrl} title={title}>\n              <TelegramIcon size={32} round />\n            </TelegramShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <WhatsappShareButton url={shareUrl} title={title} separator=\":: \">\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <LinkedinShareButton url={shareUrl}>\n              <LinkedinIcon size={32} round />\n            </LinkedinShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <RedditShareButton\n              url={shareUrl}\n              title={title}\n              windowWidth={660}\n              windowHeight={460}\n            >\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n\n            <div>\n              <RedditShareCount\n                url={shareUrl}\n                className=\"Demo__some-network__share-count\"\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs>\n            <LivejournalShareButton\n              url={shareUrl}\n              title={title}\n              description={shareUrl}\n            >\n              <LivejournalIcon size={32} round />\n            </LivejournalShareButton>\n          </Grid>\n          <Grid item xs>\n            <MailruShareButton url={shareUrl} title={title}>\n              <MailruIcon size={32} round />\n            </MailruShareButton>\n          </Grid>\n          <Grid item xs>\n            <EmailShareButton url={shareUrl} subject={title} body=\"body\">\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n          </Grid>\n          <Grid item xs>\n            <ViberShareButton url={shareUrl} title={title}>\n              <ViberIcon size={32} round />\n            </ViberShareButton>\n          </Grid>\n          <Grid item xs>\n            <WorkplaceShareButton url={shareUrl} quote={title}>\n              <WorkplaceIcon size={32} round />\n            </WorkplaceShareButton>\n          </Grid>\n          <Grid item xs>\n            <LineShareButton url={shareUrl} title={title}>\n              <LineIcon size={32} round />\n            </LineShareButton>\n          </Grid>\n          <Grid item xs>\n            <PocketShareButton url={shareUrl} title={title}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </Grid>\n          <Grid item xs>\n            <InstapaperShareButton url={shareUrl} title={title}>\n              <InstapaperIcon size={32} round />\n            </InstapaperShareButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Share;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport Tracker from \"../../components/Tracker\";\nimport CountryTable from \"../../components/Table\";\nimport News from \"../../components/News\";\nimport Share from \"../../components/Share\";\n\nexport default function Home(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <Tracker data={data} />\n      <h1>Latest Worldwide News</h1>\n      <News />\n      <Share />\n      <h1>Latest Worldwide Data</h1>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","export function toDateValuePair(locationHistoryEntry) {\n  console.log(\n    \"toDateValuePair value\",\n    Object.entries(locationHistoryEntry)[0][0]\n  );\n  const dateParts = Object.entries(locationHistoryEntry)[0][1].split(\"/\");\n  const year = Number.parseInt(\"20\" + dateParts[2], 10);\n  const month = Number.parseInt(dateParts[0], 10) - 1;\n  const day = Number.parseInt(dateParts[1], 10);\n\n  return {\n    date: new Date(year, month, day),\n    value: Number.parseInt(locationHistoryEntry[1], 10)\n  };\n}\n\nexport function mapLocationToChartSeries(location) {\n  console.log(\"mapLocationToChart value\", location);\n  const dateValuePairs = Object.entries(location.history)\n    .map(location => toDateValuePair(location))\n    .sort((a, b) => a + b);\n\n  const firstDate = dateValuePairs[0].date;\n\n  console.log(\"CHART FIRST DATA\", firstDate);\n\n  return {\n    name: location.country,\n    data: dateValuePairs.map(pair => pair.value),\n    pointStart: Date.UTC(\n      firstDate.getFullYear(),\n      firstDate.getMonth(),\n      firstDate.getDate()\n    ),\n    pointInterval: 24 * 3600 * 1000 // one day;\n  };\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n\n    const options = {\n      chart: {\n        height: 400,\n        type: \"line\",\n        zoomType: \"x\"\n      },\n      title: {\n        text: `Coronavirus confirmed cases in ${this.props.country}`\n      },\n      xAxis: {\n        type: \"datetime\"\n      },\n      yAxis: {\n        title: {\n          text: \"Confirmed cases\"\n        }\n      },\n      legend: {\n        layout: \"vertical\",\n        align: \"left\",\n        verticalAlign: \"middle\"\n      },\n      series: [\n        mapLocationToChartSeries(\n          this.props.data.confirmed.locations.find(\n            _ => _.country === this.props.country\n          )\n        )\n        // mapLocationToChartSeries(\n        //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n        // )\n      ]\n    };\n\n    this.setState({ options });\n    this.setState({ loading: false });\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.setState({ loading: false });\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nimport { Map, TileLayer } from \"react-leaflet\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart\";\nimport Share from \"../../components/Share\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Country(props) {\n  let { country } = useParams();\n  const { data } = props;\n  ReactGA.pageview(`/country/${country}`);\n\n  const [confirmed, setConfirmed] = useState();\n  const [deaths, setDeaths] = useState();\n  const [recovered, setRecovered] = useState();\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmed(data.confirmed.locations.find(_ => _.country === country));\n    setDeaths(data.deaths.locations.find(_ => _.country === country));\n    setRecovered(data.recovered.locations.find(_ => _.country === country));\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <h1>{country}</h1>\n        {data && confirmed && deaths && recovered ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    🤒 {FormatNumber(confirmed[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    💀 {FormatNumber(deaths[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    ✅ {FormatNumber(recovered[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} country={country} />\n            <Share />\n            <Map\n              style={{ height: \"600px\", marginTop: \"32px\" }}\n              center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n              zoom={7}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n            </Map>\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function Countries(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/countries\");\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState();\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (data) {\n      const results = data.confirmed.locations.filter(item =>\n        item.country.toLowerCase().includes(searchTerm)\n      );\n      setSearchResults(results);\n      console.log(\"RESULTS\", results);\n    }\n  }, [searchTerm]);\n\n  return (\n    <Layout>\n      <h1>Country List</h1>\n      <TextField label=\"Search\" value={searchTerm} onChange={handleChange} />\n      <Grid container spacing={3}>\n        {searchResults &&\n          searchResults.map((country, index) => (\n            <Grid item xs key={index} style={{ textAlign: \"center\" }}>\n              <Link\n                to={`/country/${country.country}`}\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                <span\n                  role=\"img\"\n                  style={{\n                    display: \"inline-block\",\n                    fontSize: \"3em\",\n                    lineHeight: \"1em\",\n                    verticalAlign: \"middle\"\n                  }}\n                >\n                  {country.country_code\n                    .toUpperCase()\n                    .replace(/./g, char =>\n                      String.fromCodePoint(char.charCodeAt(0) + 127397)\n                    )}\n                </span>\n                <h3>{country.province ? country.province : country.country}</h3>\n              </Link>\n            </Grid>\n          ))}\n      </Grid>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport CountryTable from \"../../components/Table\";\n\nexport default function Worldwide(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/worldwide\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <h3>Click on a Country to open a detailed view.</h3>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport News from \"../../components/News\";\n\nexport default function NewsView() {\n  ReactGA.pageview(\"/news\");\n  return (\n    <Layout>\n      <h1>Worldwide News</h1>\n      <News />\n    </Layout>\n  );\n}\n","import React from \"react\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function NotFound() {\n  return (\n    <Layout>\n      <h1>NotFOuNBNDDD</h1>\n    </Layout>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport CImage from \"../../assets/images/banner.png\";\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <meta property=\"og:type\" content=\"website\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta property=\"og:title\" content=\"Corona Virus Tracker | COVID-19\" />\n          <meta\n            property=\"og:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"og:image\" content={CImage} />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            property=\"twitter:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta\n            property=\"twitter:title\"\n            content=\"Corona Virus Tracker | COVID-19\"\n          />\n          <meta\n            property=\"twitter:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"twitter:image\" content={CImage} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tags;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactGA.initialize(\"UA-37850527-11\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\n//views\nimport Home from \"./Home\";\nimport Country from \"./Country\";\nimport Countries from \"./Countries\";\nimport Worldwide from \"./Worldwide\";\nimport News from \"./News\";\nimport NotFound from \"./NotFound\";\n\n//components\nimport Tags from \"../components/Tags\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\nimport history from \"../helpers/history\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  const data = useFetch(\n    `https://coronavirus-tracker-api.herokuapp.com/all`,\n    \"items\"\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Tags />\n      <Router basename=\"/covid19-tracker\" history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home data={data} />\n          </Route>\n          <Route exact path=\"/worldwide\">\n            <Worldwide data={data} />\n          </Route>\n          <Route exact path=\"/countries\">\n            <Countries data={data} />\n          </Route>\n          <Route exact path=\"/news\">\n            <News />\n          </Route>\n          <Route exact path=\"/country/:country\">\n            <Country data={data} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/banner.2d30a510.png\";"],"sourceRoot":""}