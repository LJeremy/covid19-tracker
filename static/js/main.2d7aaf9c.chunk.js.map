{"version":3,"sources":["components/Layout/index.js","helpers/index.js","components/Tracker/index.js","components/Table/index.js","components/News/index.js","components/Share/index.js","components/Mortality/index.js","views/Home/index.js","helpers/chart.js","components/Chart/index.js","views/Country/index.js","views/Countries/index.js","views/Worldwide/index.js","views/News/index.js","views/NotFound/index.js","components/Tags/index.js","helpers/history.js","views/routes.js","serviceWorker.js","index.js","assets/images/banner.png"],"names":["useStyles","makeStyles","theme","root","display","marginTop","spacing","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","link","color","palette","text","primary","textDecoration","Layout","props","container","children","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","to","ListItem","button","ListItemIcon","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","title","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Container","maxWidth","FormatNumber","number","Intl","NumberFormat","format","error","textAlign","secondary","Tracker","data","Grid","Tooltip","item","xs","Paper","role","latest","CircularProgress","table","minWidth","CountryTable","TableContainer","component","Table","size","TableHead","TableRow","TableCell","TableBody","confirmed","locations","map","row","index","key","name","scope","style","country","province","deaths","recovered","backgroundColor","background","inline","cursor","transform","News","useFetch","console","log","articles","href","url","target","alignItems","ListItemAvatar","Avatar","alt","src","urlToImage","Fragment","source","author","description","Share","shareUrl","document","URL","FacebookShareButton","quote","FacebookIcon","round","FacebookShareCount","count","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","windowWidth","windowHeight","RedditIcon","RedditShareCount","MailruShareButton","MailruIcon","EmailShareButton","subject","body","EmailIcon","ViberShareButton","ViberIcon","WorkplaceShareButton","WorkplaceIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","InstapaperShareButton","InstapaperIcon","Component","marginBottom","Mortality","toFixed","Home","ReactGA","pageview","mapLocationToChartSeries","location","dateValuePairs","Object","entries","history","locationHistoryEntry","dateParts","split","year","Number","parseInt","month","day","date","Date","value","toDateValuePair","sort","a","b","firstDate","pair","pointStart","UTC","getFullYear","getMonth","getDate","pointInterval","Chart","componentDidMount","options","chart","height","type","zoomType","xAxis","yAxis","legend","layout","align","verticalAlign","series","find","_","setState","loading","state","nextProps","prevProps","this","highcharts","Highcharts","Country","useParams","setConfirmed","setDeaths","setRecovered","lastUpdated","setUpdated","useEffect","undefined","parse","last_updated","toString","Map","center","coordinates","lat","long","zoom","TileLayer","Countries","searchTerm","setSearchTerm","searchResults","setSearchResults","results","filter","toLowerCase","includes","TextField","fullWidth","label","onChange","event","fontSize","lineHeight","country_code","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","Worldwide","NewsView","NotFound","Tags","Helmet","property","CImage","createBrowserHistory","ScrollToTop","window","scrollTo","Boolean","hostname","match","initialize","ReactDOM","render","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","basename","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"kdAyBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,UAAWH,EAAMI,QAAQ,IAE3BC,OAAO,eACJL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BC,MATc,IAUdC,WAAY,IAGhBC,OAAO,eACJV,EAAMM,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OAfS,IAeT,OACLG,WAhBc,MAmBlBC,WAAW,aACTC,YAAab,EAAMI,QAAQ,IAC1BJ,EAAMM,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,SAGbY,QAASd,EAAMe,OAAOD,QACtBE,YAAa,CACXR,MA3BgB,KA6BlBS,QAAS,CACPC,SAAU,EACVC,QAASnB,EAAMI,QAAQ,IAEzBgB,KAAM,CACJC,MAAOrB,EAAMsB,QAAQC,KAAKC,QAC1BC,eAAgB,eAmILC,MA/Hf,SAAgBC,GAAQ,IACdC,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,SACbC,EAAUhC,IACVE,EAAQ+B,cAHO,EAIeC,IAAMC,UAAS,GAJ9B,mBAIdC,EAJc,KAIFC,EAJE,KAMfC,EAAqB,WACzBD,GAAeD,IAGX7B,EACJ,6BACE,yBAAKgC,UAAWP,EAAQhB,UACxB,kBAACwB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMF,UAAWP,EAAQV,KAAMoB,GAAG,KAChC,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpB,QAAQ,YAI5B,kBAACc,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMF,UAAWP,EAAQV,KAAMoB,GAAG,cAChC,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpB,QAAQ,iBAI5B,kBAACc,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMF,UAAWP,EAAQV,KAAMoB,GAAG,cAChC,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpB,QAAQ,oBAI5B,kBAACc,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMF,UAAWP,EAAQV,KAAMoB,GAAG,SAChC,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcpB,QAAQ,YAI5B,kBAACc,EAAA,EAAD,OAIJ,OACE,yBAAKD,UAAWP,EAAQ7B,MACtB,kBAAC4C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQV,UAAWP,EAAQpB,QAC1C,kBAACsC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE5B,MAAM,UACN6B,aAAW,cACXC,KAAK,QACLC,QAAShB,EACTC,UAAWP,EAAQlB,YAEnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAMyB,UAAWP,EAAQV,KAAMoB,GAAG,KAChC,kBAACa,EAAA,EAAD,CAAYC,QAAQ,KAAKjB,UAAWP,EAAQyB,OAA5C,4BAMN,yBAAKlB,UAAWP,EAAQzB,OAAQ6C,aAAW,mBAEzC,kBAACM,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACE/B,UAAWA,EACX0B,QAAQ,YACRM,OAA4B,QAApB5D,EAAM6D,UAAsB,QAAU,OAC9CC,KAAM5B,EACN6B,QAAS3B,EACTN,QAAS,CACPkC,MAAOlC,EAAQd,aAEjBiD,WAAY,CACVC,aAAa,IAGd7D,IAGL,kBAACmD,EAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,OAC5B,kBAACC,EAAA,EAAD,CACE7B,QAAS,CACPkC,MAAOlC,EAAQd,aAEjBsC,QAAQ,YACRQ,MAAI,GAEHzD,KAIP,yBAAKgC,UAAWP,EAAQhB,UACxB,kBAACsD,EAAA,EAAD,CAAWC,SAAS,MAAMxC,K,oCChLzB,SAASyC,EAAaC,GAC3B,IACE,OAAO,IAAIC,KAAKC,aAAa,SAASC,OAAOH,GAC7C,MAAOI,GACP,OAAO,GCMX,IAAM7E,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiB,SAAU,GAEZ8C,MAAO,CACL9D,QAAS,OACTiB,QAASnB,EAAMI,QAAQ,GACvBwE,UAAW,SACXvD,MAAOrB,EAAMsB,QAAQC,KAAKsD,eAIf,SAASC,EAAQnD,GAAQ,IAC9BoD,EAASpD,EAAToD,KAEFjD,EAAUhC,IAChB,OACE,yBAAKuC,UAAWP,EAAQ7B,MACrB8E,EACC,kBAACC,EAAA,EAAD,CAAMpD,WAAS,EAACxB,QAAS,GACvB,kBAAC6E,EAAA,EAAD,CAAS1B,MAAM,aACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OACxB,0BAAMqB,KAAK,OAAX,iBAA4B,IAC3Bf,EAAaS,EAAKO,OAAL,cAIpB,kBAACL,EAAA,EAAD,CAAS1B,MAAM,UACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OACxB,0BAAMqB,KAAK,OAAX,iBAA4B,IAC3Bf,EAAaS,EAAKO,OAAL,WAIpB,kBAACL,EAAA,EAAD,CAAS1B,MAAM,aACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OACxB,0BAAMqB,KAAK,OAAX,WAA2B,IAC1Bf,EAAaS,EAAKO,OAAL,eAMtB,kBAACC,EAAA,EAAD,O,2DC1CFzF,GAAYC,YAAW,CAC3B6B,UAAW,CACTzB,UAAW,IAEbqF,MAAO,CACLC,SAAU,OAIC,SAASC,GAAa/D,GACnC,IAAMG,EAAUhC,KAERiF,EAASpD,EAAToD,KAER,OAAOA,EACL,kBAACY,EAAA,EAAD,CAAgBC,UAAWR,IAAO/C,UAAWP,EAAQF,WACnD,kBAACiE,EAAA,EAAD,CAAOxD,UAAWP,EAAQ0D,MAAOM,KAAK,QAAQ5C,aAAW,gBACvD,kBAAC6C,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,oBAGJ,kBAACC,EAAA,EAAD,KACGnB,EAAKoB,UAAUC,UAAUC,KAAI,SAACC,EAAKC,GAAN,OAC5B,kBAACP,GAAA,EAAD,aAAUQ,IAAKF,EAAIG,MAAnB,MAA8BF,GAC5B,kBAACN,EAAA,EAAD,CAAWL,UAAU,KAAKc,MAAM,OAC9B,kBAAC,IAAD,CACEC,MAAO,CAAEtF,MAAO,QAASI,eAAgB,WACzCe,GAAE,mBAAc8D,EAAIM,UAEnBN,EAAIM,UAGT,kBAACX,EAAA,EAAD,KAAYK,EAAIO,UAChB,kBAACZ,EAAA,EAAD,KAAYK,EAAIhB,QAChB,kBAACW,EAAA,EAAD,KAAYlB,EAAK+B,OAAOV,UAAUG,GAAOjB,QACzC,kBAACW,EAAA,EAAD,KAAYlB,EAAKgC,UAAUX,UAAUG,GAAOjB,eAOtD,kBAACC,EAAA,EAAD,M,iCChDEzF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJO,MAAO,OAEPwG,gBAAiBhH,EAAMsB,QAAQ2F,WAAWjD,OAE5CkD,OAAQ,CACNhH,QAAS,UAEXkB,KAAM,CACJC,MAAO,UACPI,eAAgB,OAChB0F,OAAQ,UACR,UAAW,CACTC,UAAW,yCAKF,SAASC,GAAK1F,GAC3B,IAAMG,EAAUhC,KAGViF,GAFcpD,EAAZiF,QAEKU,aAAS,iIAEpB,SAIF,OADAC,QAAQC,IAAI,OAAQzC,GAElB,kBAACxC,EAAA,EAAD,CAAMF,UAAWP,EAAQ7B,MACtB8E,GACCA,EAAK0C,SAASpB,KAAI,SAACnB,EAAMqB,GAAP,OAChB,uBACEC,IAAKD,EACLmB,KAAMxC,EAAKyC,IACXC,OAAO,SACPvF,UAAWP,EAAQV,MAEnB,kBAACqB,EAAA,EAAD,CAAU+D,IAAKD,EAAOsB,WAAW,cAC/B,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,IAAI,aAAaC,IAAK/C,EAAKgD,cAErC,kBAACtF,EAAA,EAAD,CACEpB,QAAS0D,EAAK3B,MACdsB,UACE,kBAAC,IAAMsD,SAAP,KACE,kBAAC9E,EAAA,EAAD,CACEuC,UAAU,OACVtC,QAAQ,QACRjB,UAAWP,EAAQoF,OACnB7F,MAAM,eAEL6D,EAAKkD,OAAO3B,KANf,KAMuBvB,EAAKmD,OAN5B,IAMqC,IAEpCnD,EAAKoD,gBAKH,IAAV/B,GAAe,kBAACjE,EAAA,EAAD,CAASgB,QAAQ,QAAQsC,UAAU,Y,yUCyEhD2C,G,sLAzGX,IAAMC,EAAWC,SAASC,IACpBnF,EAAQkF,SAASlF,MAKvB,OAHAgE,QAAQC,IAAI,eAAgBgB,GAC5BjB,QAAQC,IAAI,iBAAkBjE,GAG5B,oCACE,+CACA,kBAACyB,EAAA,EAAD,CAAMpD,WAAS,EAACxB,QAAS,GACvB,kBAAC4E,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACwD,GAAA,EAAD,CAAqBhB,IAAKa,EAAUI,MAAOrF,GACzC,kBAACsF,GAAA,EAAD,CAAc/C,KAAM,GAAIgD,OAAK,KAG/B,kBAACC,GAAA,EAAD,CACEpB,IAAKa,EACLnG,UAAU,oCAET,SAAA2G,GAAK,OAAIA,MAGd,kBAAChE,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC8D,GAAA,EAAD,CAAoBtB,IAAKa,EAAUjF,MAAOA,GACxC,kBAAC2F,GAAA,EAAD,CAAapD,KAAM,GAAIgD,OAAK,KAE9B,yBAAKzG,UAAU,mCAAf,SAEF,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACgE,GAAA,EAAD,CAAqBxB,IAAKa,EAAUjF,MAAOA,GACzC,kBAAC6F,GAAA,EAAD,CAActD,KAAM,GAAIgD,OAAK,KAE/B,yBAAKzG,UAAU,mCAAf,SAEF,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACkE,GAAA,EAAD,CAAqB1B,IAAKa,EAAUjF,MAAOA,EAAO+F,UAAU,OAC1D,kBAACC,GAAA,EAAD,CAAczD,KAAM,GAAIgD,OAAK,KAG/B,yBAAKzG,UAAU,mCAAf,SAEF,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACqE,GAAA,EAAD,CAAqB7B,IAAKa,GACxB,kBAACiB,GAAA,EAAD,CAAc3D,KAAM,GAAIgD,OAAK,MAIjC,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACuE,GAAA,EAAD,CACE/B,IAAKa,EACLjF,MAAOA,EACPoG,YAAa,IACbC,aAAc,KAEd,kBAACC,GAAA,EAAD,CAAY/D,KAAM,GAAIgD,OAAK,KAG7B,6BACE,kBAACgB,GAAA,EAAD,CACEnC,IAAKa,EACLnG,UAAU,sCAIhB,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC4E,GAAA,EAAD,CAAmBpC,IAAKa,EAAUjF,MAAOA,GACvC,kBAACyG,GAAA,EAAD,CAAYlE,KAAM,GAAIgD,OAAK,MAG/B,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC8E,GAAA,EAAD,CAAkBtC,IAAKa,EAAU0B,QAAS3G,EAAO4G,KAAK,QACpD,kBAACC,GAAA,EAAD,CAAWtE,KAAM,GAAIgD,OAAK,MAG9B,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACkF,GAAA,EAAD,CAAkB1C,IAAKa,EAAUjF,MAAOA,GACtC,kBAAC+G,GAAA,EAAD,CAAWxE,KAAM,GAAIgD,OAAK,MAG9B,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACoF,GAAA,EAAD,CAAsB5C,IAAKa,EAAUI,MAAOrF,GAC1C,kBAACiH,GAAA,EAAD,CAAe1E,KAAM,GAAIgD,OAAK,MAGlC,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACsF,GAAA,EAAD,CAAiB9C,IAAKa,EAAUjF,MAAOA,GACrC,kBAACmH,GAAA,EAAD,CAAU5E,KAAM,GAAIgD,OAAK,MAG7B,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACwF,GAAA,EAAD,CAAmBhD,IAAKa,EAAUjF,MAAOA,GACvC,kBAACqH,GAAA,EAAD,CAAY9E,KAAM,GAAIgD,OAAK,MAG/B,kBAAC9D,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC0F,GAAA,EAAD,CAAuBlD,IAAKa,EAAUjF,MAAOA,GAC3C,kBAACuH,GAAA,EAAD,CAAgBhF,KAAM,GAAIgD,OAAK,Y,GAlGzBiC,a,oBCjCdjL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiB,SAAU,GAEZ8C,MAAO,CACL9D,QAAS,OACTiB,QAASnB,EAAMI,QAAQ,GACvB4K,aAAchL,EAAMI,QAAQ,GAC5BwE,UAAW,SACXvD,MAAOrB,EAAMsB,QAAQC,KAAKsD,eA4BfoG,GAxBG,SAAAtJ,GAChB,IAAMG,EAAUhC,KACRiF,EAASpD,EAAToD,KAUR,OACE,kBAACC,EAAA,EAAD,CAAMpD,WAAS,EAACxB,QAAS,GACvB,kBAAC6E,EAAA,EAAD,CAAS1B,MAJX,wEAKI,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OACxB,+CAbDe,EAAI,WACFA,EAAKO,OAAOwB,OAAS/B,EAAKO,OAAOa,UAAa,KAAK+E,QAAQ,IAChE,IAWI,UCvBG,SAASC,GAAKxJ,GAAQ,IAC3BoD,EAASpD,EAAToD,KAER,OADAqG,IAAQC,SAAS,KAEf,kBAAC,EAAD,KACE,+CAEA,kBAAC,GAAD,CAAWtG,KAAMA,IACjB,kBAACD,EAAD,CAASC,KAAMA,IACf,qDACA,kBAACsC,GAAD,MACA,kBAAC,GAAD,MACA,qDACA,kBAAC3B,GAAD,CAAcX,KAAMA,K,6CCVnB,SAASuG,GAAyBC,GACvChE,QAAQC,IAAI,2BAA4B+D,GACxC,IAAMC,EAAiBC,OAAOC,QAAQH,EAASI,SAC5CtF,KAAI,SAAAkF,GAAQ,OAnBV,SAAyBK,GAC9BrE,QAAQC,IACN,wBACAiE,OAAOC,QAAQE,GAAsB,GAAG,IAE1C,IAAMC,EAAYJ,OAAOC,QAAQE,GAAsB,GAAG,GAAGE,MAAM,KAC7DC,EAAOC,OAAOC,SAAS,KAAOJ,EAAU,GAAI,IAC5CK,EAAQF,OAAOC,SAASJ,EAAU,GAAI,IAAM,EAC5CM,EAAMH,OAAOC,SAASJ,EAAU,GAAI,IAE1C,MAAO,CACLO,KAAM,IAAIC,KAAKN,EAAMG,EAAOC,GAC5BG,MAAON,OAAOC,SAASL,EAAqB,GAAI,KAO/BW,CAAgBhB,MAChCiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAEhBC,EAAYnB,EAAe,GAAGY,KAIpC,OAFA7E,QAAQC,IAAI,mBAAoBmF,GAEzB,CACLlG,KAAM8E,EAAS3E,QACf7B,KAAMyG,EAAenF,KAAI,SAAAuG,GAAI,OAAIA,EAAKN,SACtCO,WAAYR,KAAKS,IACfH,EAAUI,cACVJ,EAAUK,WACVL,EAAUM,WAEZC,cAAe,O,IC8CJC,G,YAvEb,WAAYxL,GAAQ,IAAD,+BACjB,8CAAMA,KAMRyL,kBAAoB,WAClB7F,QAAQC,IAAI,cAAe,EAAK7F,MAAMoD,MAEtC,IAAMsI,EAAU,CACdC,MAAO,CACLC,OAAQ,IACRC,KAAM,OACNC,SAAU,KAEZlK,MAAO,CACLhC,KAAK,kCAAD,OAAoC,EAAKI,MAAMiF,UAErD8G,MAAO,CACLF,KAAM,YAERG,MAAO,CACLpK,MAAO,CACLhC,KAAM,oBAGVqM,OAAQ,CACNC,OAAQ,WACRC,MAAO,OACPC,cAAe,UAEjBC,OAAQ,CACN1C,GACE,EAAK3J,MAAMoD,KAAKoB,UAAUC,UAAU6H,MAClC,SAAAC,GAAC,OAAIA,EAAEtH,UAAY,EAAKjF,MAAMiF,cAStC,EAAKuH,SAAS,CAAEd,YAChB,EAAKc,SAAS,CAAEC,SAAS,KA3CzB,EAAKC,MAAQ,CACXD,SAAS,GAHM,E,yFAgDOE,EAAWC,GAC/BD,IAAcC,GAChBC,KAAKL,SAAS,CAAEC,SAAS,IAE3B7G,QAAQC,IAAI,kBAAmB8G,K,+BAGvB,IAAD,EACsBE,KAAKH,MAA1BD,EADD,EACCA,QAASf,EADV,EACUA,QACjB,OACE,kBAAC,IAAMlF,SAAP,KACIiG,EAKA,kBAAC7I,EAAA,EAAD,MAJA,yBAAKoB,MAAO,CAAExG,UAAW,SACvB,kBAAC,KAAD,CAAiBsO,WAAYC,KAAYrB,QAASA,U,GA9D1CtC,aCWdjL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiB,SAAU,EACV8J,aAAc,IAEhBhH,MAAO,CACL7C,QAASnB,EAAMI,QAAQ,GACvBwE,UAAW,SACXvD,MAAOrB,EAAMsB,QAAQC,KAAKsD,eAIf,SAAS8J,GAAQhN,GAAQ,IAChCiF,EAAYgI,cAAZhI,QACE7B,EAASpD,EAAToD,KACRqG,IAAQC,SAAR,mBAA6BzE,IAHQ,MAKH3E,qBALG,mBAK9BkE,EAL8B,KAKnB0I,EALmB,OAMT5M,qBANS,mBAM9B6E,EAN8B,KAMtBgI,EANsB,OAOH7M,qBAPG,mBAO9B8E,EAP8B,KAOnBgI,EAPmB,OAQH9M,qBARG,mBAQ9B+M,EAR8B,KAQjBC,EARiB,KAiBrCC,qBAAU,gBACKC,IAATpK,GAPJ8J,EAAa9J,EAAKoB,UAAUC,UAAU6H,MAAK,SAAAC,GAAC,OAAIA,EAAEtH,UAAYA,MAC9DkI,EAAU/J,EAAK+B,OAAOV,UAAU6H,MAAK,SAAAC,GAAC,OAAIA,EAAEtH,UAAYA,MACxDmI,EAAahK,EAAKgC,UAAUX,UAAU6H,MAAK,SAAAC,GAAC,OAAIA,EAAEtH,UAAYA,MAC9DqI,EAAW,IAAI5C,KAAKA,KAAK+C,MAAMrK,EAAKoB,UAAUkJ,eAAeC,aAO3D/H,QAAQC,IAAI,cAIhB,IAAM1F,EAAUhC,KAEhB,OACE,kBAAC,EAAD,KACE,yBAAKuC,UAAWP,EAAQ7B,MACtB,4BAAK2G,GACJ7B,GAAQoB,GAAaW,GAAUC,EAC9B,oCACE,4BACE,8CADF,IAC0BiI,GAE1B,kBAAChK,EAAA,EAAD,CAAMpD,WAAS,EAACxB,QAAS,GACvB,kBAAC6E,EAAA,EAAD,CAAS1B,MAAM,aACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OAA1B,gBACMM,EAAa6B,EAAS,WAIhC,kBAAClB,EAAA,EAAD,CAAS1B,MAAM,UACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OAA1B,gBACMM,EAAawC,EAAM,WAI7B,kBAAC7B,EAAA,EAAD,CAAS1B,MAAM,aACb,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/C,UAAWP,EAAQkC,OAA1B,UACKM,EAAayC,EAAS,YAKjC,kBAAC,GAAD,CAAOhC,KAAMA,EAAM6B,QAASA,IAC5B,kBAAC,GAAD,MACA,kBAAC2I,GAAA,EAAD,CACE5I,MAAO,CAAE4G,OAAQ,QAASpN,UAAW,QACrCqP,OAAQ,CAACrJ,EAAUsJ,YAAYC,IAAKvJ,EAAUsJ,YAAYE,MAC1DC,KAAM,GAEN,kBAACC,GAAA,EAAD,CAAWlI,IAAI,6EAInB,kBAACpC,EAAA,EAAD,Q,cC5FK,SAASuK,GAAUnO,GAAQ,IAChCoD,EAASpD,EAAToD,KACRqG,IAAQC,SAAS,cAFsB,MAIHpJ,mBAAS,IAJN,mBAIhC8N,EAJgC,KAIpBC,EAJoB,OAKG/N,qBALH,mBAKhCgO,EALgC,KAKjBC,EALiB,KAqBvC,OAVAhB,qBAAU,WACR,GAAInK,EAAM,CACR,IAAMoL,EAAUpL,EAAKoB,UAAUC,UAAUgK,QAAO,SAAAlL,GAAI,OAClDA,EAAK0B,QAAQyJ,cAAcC,SAASP,EAAWM,kBAEjDH,EAAiBC,GACjB5I,QAAQC,IAAI,UAAW2I,MAExB,CAACJ,IAGF,kBAAC,EAAD,KACE,4CACA,kBAAC/K,EAAA,EAAD,CAAMpD,WAAS,EAACxB,QAAS,GACvB,kBAAC4E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACoL,GAAA,EAAD,CACE5J,MAAO,CAAEqE,aAAc,IACvBwF,WAAS,EACTC,MAAM,SACNnE,MAAOyD,EACPW,SAxBW,SAAAC,GACnBX,EAAcW,EAAM/I,OAAO0E,WA0BtB2D,GACCA,EAAc5J,KAAI,SAACO,EAASL,GAAV,OAChB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAACqB,IAAKD,EAAOI,MAAO,CAAE/B,UAAW,WAC5C,kBAAC,IAAD,CACEpC,GAAE,mBAAcoE,EAAQA,SACxBD,MAAO,CAAEtF,MAAO,QAASI,eAAgB,SAEzC,0BACE4D,KAAK,MACLsB,MAAO,CACLzG,QAAS,eACT0Q,SAAU,MACVC,WAAY,MACZ9C,cAAe,WAGhBnH,EAAQkK,aACNC,cACAC,QAAQ,MAAM,SAAAC,GAAI,OACjBC,OAAOC,cAAcF,EAAKG,WAAW,GAAK,YAGhD,4BAAKxK,EAAQC,SAAWD,EAAQC,SAAWD,EAAQA,gBCzDpD,SAASyK,GAAU1P,GAAQ,IAChCoD,EAASpD,EAAToD,KAER,OADAqG,IAAQC,SAAS,cAEf,kBAAC,EAAD,KACE,+CACA,2EACA,kBAAC3F,GAAD,CAAcX,KAAMA,KCPX,SAASuM,KAEtB,OADAlG,IAAQC,SAAS,SAEf,kBAAC,EAAD,KACE,8CACA,kBAAChE,GAAD,OCRS,SAASkK,KACtB,OACE,kBAAC,EAAD,KACE,6C,kCCqCSC,G,YAxCb,WAAY7P,GAAQ,wEACZA,I,wEAIN,OACE,kBAAC,IAAMwG,SAAP,KACE,kBAACsJ,GAAA,OAAD,KACE,0BAAMC,SAAS,UAAUzQ,QAAQ,YACjC,0BACEyQ,SAAS,SACTzQ,QAAQ,yCAEV,0BAAMyQ,SAAS,WAAWzQ,QAAQ,oCAClC,0BACEyQ,SAAS,iBACTzQ,QAAQ,qDAEV,0BAAMyQ,SAAS,WAAWzQ,QAAS0Q,OAEnC,0BAAMD,SAAS,eAAezQ,QAAQ,wBACtC,0BACEyQ,SAAS,cACTzQ,QAAQ,yCAEV,0BACEyQ,SAAS,gBACTzQ,QAAQ,oCAEV,0BACEyQ,SAAS,sBACTzQ,QAAQ,qDAEV,0BAAMyQ,SAAS,gBAAgBzQ,QAAS0Q,a,GAlC/B5G,a,SCHJ6G,kBCoEf,IAAMC,GAAc,WAElB,OADAC,OAAOC,SAAS,EAAG,GACZ,MC3DWC,QACW,cAA7BF,OAAOvG,SAAS0G,UAEe,UAA7BH,OAAOvG,SAAS0G,UAEhBH,OAAOvG,SAAS0G,SAASC,MACvB,2DCZN9G,IAAQ+G,WAAW,kBAEnBC,IAASC,OAAO,mBFYD,WACb,IAAMC,EAAkBC,YAAc,gCAEhCvS,EAAQgC,IAAMwQ,SAClB,kBACEC,YAAe,CACbnR,QAAS,CACPkM,KAAM8E,EAAkB,OAAS,aAGvC,CAACA,IAGGvN,EAAOuC,aAAS,oDAEpB,SAGF,OACE,kBAACoL,EAAA,EAAD,CAAe1S,MAAOA,GACpB,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAQ2S,SAAS,IAAIhH,QAASA,IAC5B,kBAAC,IAAD,CAAO/F,UAAWiM,KAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,CAAM9N,KAAMA,KAEd,kBAAC,IAAD,CAAO6N,OAAK,EAACC,KAAK,cAChB,kBAACxB,GAAD,CAAWtM,KAAMA,KAEnB,kBAAC,IAAD,CAAO6N,OAAK,EAACC,KAAK,cAChB,kBAAC/C,GAAD,CAAW/K,KAAMA,KAEnB,kBAAC,IAAD,CAAO6N,OAAK,EAACC,KAAK,SAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAChB,kBAAClE,GAAD,CAAS5J,KAAMA,KAEjB,kBAAC,IAAD,KACE,kBAACwM,GAAD,YErDI,MAAS9I,SAASqK,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1O,GACL4C,QAAQ5C,MAAMA,EAAM2O,a,mBEzI5BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.2d7aaf9c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport Container from \"@material-ui/core/Container\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(8)\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  link: {\n    color: theme.palette.text.primary,\n    textDecoration: \"inherit\"\n  }\n}));\n\nfunction Layout(props) {\n  const { container, children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/\">\n          <ListItem button>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/worldwide\">\n          <ListItem button>\n            <ListItemIcon>\n              <PublicIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Worldwide\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/countries\">\n          <ListItem button>\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Country List\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <Link className={classes.link} to=\"/news\">\n          <ListItem button>\n            <ListItemIcon>\n              <AnnouncementIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"News\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link className={classes.link} to=\"/\">\n            <Typography variant=\"h6\" className={classes.title}>\n              🦠 COVID-19\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <div className={classes.toolbar} />\n      <Container maxWidth=\"lg\">{children}</Container>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  container: PropTypes.any\n};\n\nexport default Layout;\n","export function FormatNumber(number) {\n  try {\n    return new Intl.NumberFormat(\"en-US\").format(number);\n  } catch (error) {\n    return 0;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    display: \"grid\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Tracker(props) {\n  const { data } = props;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {data ? (\n        <Grid container spacing={3}>\n          <Tooltip title=\"Confirmed\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <span role=\"img\"> 🤒</span>{\" \"}\n                {FormatNumber(data.latest[\"confirmed\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Deaths\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <span role=\"img\"> 💀</span>{\" \"}\n                {FormatNumber(data.latest[\"deaths\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n          <Tooltip title=\"Recovered\">\n            <Grid item xs>\n              <Paper className={classes.paper}>\n                <span role=\"img\"> ✅</span>{\" \"}\n                {FormatNumber(data.latest[\"recovered\"])}\n              </Paper>\n            </Grid>\n          </Tooltip>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 32\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function CountryTable(props) {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  return data ? (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell>Province</TableCell>\n            <TableCell>Confirmed</TableCell>\n            <TableCell>Deaths</TableCell>\n            <TableCell>Recovered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.confirmed.locations.map((row, index) => (\n            <TableRow key={row.name} key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link\n                  style={{ color: \"white\", textDecoration: \"inherit\" }}\n                  to={`/country/${row.country}`}\n                >\n                  {row.country}\n                </Link>\n              </TableCell>\n              <TableCell>{row.province}</TableCell>\n              <TableCell>{row.latest}</TableCell>\n              <TableCell>{data.deaths.locations[index].latest}</TableCell>\n              <TableCell>{data.recovered.locations[index].latest}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"translate(14px, 17px) scale(1.2)\"\n    }\n  }\n}));\n\nexport default function News(props) {\n  const classes = useStyles();\n  const { country } = props;\n\n  const data = useFetch(\n    `https://newsapi.org/v2/everything?language=en&q=covid19&sortBy=publishedAt&pageSize=10&apiKey=a91facb09c9444c4a2797a5ac993dc57`,\n    \"news\"\n  );\n\n  console.log(\"NEWS\", data);\n  return (\n    <List className={classes.root}>\n      {data &&\n        data.articles.map((item, index) => (\n          <a\n            key={index}\n            href={item.url}\n            target=\"_blank\"\n            className={classes.link}\n          >\n            <ListItem key={index} alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.urlToImage} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={item.title}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {item.source.name}, {item.author} {\"\"}\n                    </Typography>\n                    {item.description}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            {index !== 9 && <Divider variant=\"inset\" component=\"li\" />}\n          </a>\n        ))}\n    </List>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable import/no-unresolved, import/extensions, import/no-extraneous-dependencies */\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  FacebookShareCount,\n  RedditShareCount,\n  FacebookShareButton,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  EmailShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  ViberShareButton,\n  WorkplaceShareButton,\n  LineShareButton,\n  PocketShareButton,\n  InstapaperShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LinkedinIcon,\n  TelegramIcon,\n  WhatsappIcon,\n  RedditIcon,\n  MailruIcon,\n  EmailIcon,\n  LivejournalIcon,\n  ViberIcon,\n  WorkplaceIcon,\n  LineIcon,\n  PocketIcon,\n  InstapaperIcon\n} from \"react-share\";\n\nclass Share extends Component {\n  render() {\n    const shareUrl = document.URL;\n    const title = document.title;\n\n    console.log(\"DOCUMENT URL\", shareUrl);\n    console.log(\"DOCUMENT TITLE\", title);\n\n    return (\n      <>\n        <h1>Share this page</h1>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n\n            <FacebookShareCount\n              url={shareUrl}\n              className=\"Demo__some-network__share-count\"\n            >\n              {count => count}\n            </FacebookShareCount>\n          </Grid>\n          <Grid item xs>\n            <TwitterShareButton url={shareUrl} title={title}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <TelegramShareButton url={shareUrl} title={title}>\n              <TelegramIcon size={32} round />\n            </TelegramShareButton>\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <WhatsappShareButton url={shareUrl} title={title} separator=\":: \">\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n\n            <div className=\"Demo__some-network__share-count\">&nbsp;</div>\n          </Grid>\n          <Grid item xs>\n            <LinkedinShareButton url={shareUrl}>\n              <LinkedinIcon size={32} round />\n            </LinkedinShareButton>\n          </Grid>\n\n          <Grid item xs>\n            <RedditShareButton\n              url={shareUrl}\n              title={title}\n              windowWidth={660}\n              windowHeight={460}\n            >\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n\n            <div>\n              <RedditShareCount\n                url={shareUrl}\n                className=\"Demo__some-network__share-count\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs>\n            <MailruShareButton url={shareUrl} title={title}>\n              <MailruIcon size={32} round />\n            </MailruShareButton>\n          </Grid>\n          <Grid item xs>\n            <EmailShareButton url={shareUrl} subject={title} body=\"body\">\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n          </Grid>\n          <Grid item xs>\n            <ViberShareButton url={shareUrl} title={title}>\n              <ViberIcon size={32} round />\n            </ViberShareButton>\n          </Grid>\n          <Grid item xs>\n            <WorkplaceShareButton url={shareUrl} quote={title}>\n              <WorkplaceIcon size={32} round />\n            </WorkplaceShareButton>\n          </Grid>\n          <Grid item xs>\n            <LineShareButton url={shareUrl} title={title}>\n              <LineIcon size={32} round />\n            </LineShareButton>\n          </Grid>\n          <Grid item xs>\n            <PocketShareButton url={shareUrl} title={title}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </Grid>\n          <Grid item xs>\n            <InstapaperShareButton url={shareUrl} title={title}>\n              <InstapaperIcon size={32} round />\n            </InstapaperShareButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Share;\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    display: \"grid\",\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Mortality = props => {\n  const classes = useStyles();\n  const { data } = props;\n  const calculateMortality = () => {\n    return data\n      ? `${((data.latest.deaths / data.latest.confirmed) * 100).toFixed(2)}`\n      : \"-\";\n  };\n\n  const tooltip =\n    \"How the Mortality rate is calculated: \\n (deaths / confirmed) * 100)\";\n\n  return (\n    <Grid container spacing={0}>\n      <Tooltip title={tooltip}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <h1>Mortality rate: {calculateMortality()}%</h1>\n          </Paper>\n        </Grid>\n      </Tooltip>\n    </Grid>\n  );\n};\nexport default Mortality;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport Tracker from \"../../components/Tracker\";\nimport CountryTable from \"../../components/Table\";\nimport News from \"../../components/News\";\nimport Share from \"../../components/Share\";\nimport Map from \"../../components/Map\";\nimport Mortality from \"../../components/Mortality\";\n\nexport default function Home(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      {/* <Map data={data} /> */}\n      <Mortality data={data} />\n      <Tracker data={data} />\n      <h1>Latest Worldwide News</h1>\n      <News />\n      <Share />\n      <h1>Latest Worldwide Data</h1>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","export function toDateValuePair(locationHistoryEntry) {\n  console.log(\n    \"toDateValuePair value\",\n    Object.entries(locationHistoryEntry)[0][0]\n  );\n  const dateParts = Object.entries(locationHistoryEntry)[0][1].split(\"/\");\n  const year = Number.parseInt(\"20\" + dateParts[2], 10);\n  const month = Number.parseInt(dateParts[0], 10) - 1;\n  const day = Number.parseInt(dateParts[1], 10);\n\n  return {\n    date: new Date(year, month, day),\n    value: Number.parseInt(locationHistoryEntry[1], 10)\n  };\n}\n\nexport function mapLocationToChartSeries(location) {\n  console.log(\"mapLocationToChart value\", location);\n  const dateValuePairs = Object.entries(location.history)\n    .map(location => toDateValuePair(location))\n    .sort((a, b) => a + b);\n\n  const firstDate = dateValuePairs[0].date;\n\n  console.log(\"CHART FIRST DATA\", firstDate);\n\n  return {\n    name: location.country,\n    data: dateValuePairs.map(pair => pair.value),\n    pointStart: Date.UTC(\n      firstDate.getFullYear(),\n      firstDate.getMonth(),\n      firstDate.getDate()\n    ),\n    pointInterval: 24 * 3600 * 1000 // one day;\n  };\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// helpers\nimport { mapLocationToChartSeries } from \"../../helpers/chart\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(\"CHART MOUNT\", this.props.data);\n\n    const options = {\n      chart: {\n        height: 400,\n        type: \"line\",\n        zoomType: \"x\"\n      },\n      title: {\n        text: `Coronavirus confirmed cases in ${this.props.country}`\n      },\n      xAxis: {\n        type: \"datetime\"\n      },\n      yAxis: {\n        title: {\n          text: \"Confirmed cases\"\n        }\n      },\n      legend: {\n        layout: \"vertical\",\n        align: \"left\",\n        verticalAlign: \"middle\"\n      },\n      series: [\n        mapLocationToChartSeries(\n          this.props.data.confirmed.locations.find(\n            _ => _.country === this.props.country\n          )\n        )\n        // mapLocationToChartSeries(\n        //   nextProps.data.confirmed.locations.find(_ => _.country === \"Spain\")\n        // )\n      ]\n    };\n\n    this.setState({ options });\n    this.setState({ loading: false });\n  };\n\n  componentWillReceiveProps(nextProps, prevProps) {\n    if (nextProps !== prevProps) {\n      this.setState({ loading: false });\n    }\n    console.log(\"CHART NEW PROPS\", nextProps);\n  }\n\n  render() {\n    const { loading, options } = this.state;\n    return (\n      <React.Fragment>\n        {!loading ? (\n          <div style={{ marginTop: \"32px\" }}>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nimport { Map, TileLayer } from \"react-leaflet\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Helpers\nimport { FormatNumber } from \"../../helpers\";\n\n//components\nimport Layout from \"../../components/Layout\";\nimport Chart from \"../../components/Chart\";\nimport Share from \"../../components/Share\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 32\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Country(props) {\n  let { country } = useParams();\n  const { data } = props;\n  ReactGA.pageview(`/country/${country}`);\n\n  const [confirmed, setConfirmed] = useState();\n  const [deaths, setDeaths] = useState();\n  const [recovered, setRecovered] = useState();\n  const [lastUpdated, setUpdated] = useState();\n\n  const findArray = () => {\n    setConfirmed(data.confirmed.locations.find(_ => _.country === country));\n    setDeaths(data.deaths.locations.find(_ => _.country === country));\n    setRecovered(data.recovered.locations.find(_ => _.country === country));\n    setUpdated(new Date(Date.parse(data.confirmed.last_updated)).toString());\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      findArray();\n    } else {\n      console.log(\"NO DATA\");\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <h1>{country}</h1>\n        {data && confirmed && deaths && recovered ? (\n          <>\n            <h3>\n              <b>Lastest update:</b> {lastUpdated}\n            </h3>\n            <Grid container spacing={3}>\n              <Tooltip title=\"Confirmed\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    🤒 {FormatNumber(confirmed[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Deaths\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    💀 {FormatNumber(deaths[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n              <Tooltip title=\"Recovered\">\n                <Grid item xs>\n                  <Paper className={classes.paper}>\n                    ✅ {FormatNumber(recovered[\"latest\"])}\n                  </Paper>\n                </Grid>\n              </Tooltip>\n            </Grid>\n            <Chart data={data} country={country} />\n            <Share />\n            <Map\n              style={{ height: \"600px\", marginTop: \"32px\" }}\n              center={[confirmed.coordinates.lat, confirmed.coordinates.long]}\n              zoom={7}\n            >\n              <TileLayer url=\"https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png\" />\n            </Map>\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function Countries(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/countries\");\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState();\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (data) {\n      const results = data.confirmed.locations.filter(item =>\n        item.country.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setSearchResults(results);\n      console.log(\"RESULTS\", results);\n    }\n  }, [searchTerm]);\n\n  return (\n    <Layout>\n      <h1>Country List</h1>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            style={{ marginBottom: 32 }}\n            fullWidth\n            label=\"Search\"\n            value={searchTerm}\n            onChange={handleChange}\n          />\n        </Grid>\n        {searchResults &&\n          searchResults.map((country, index) => (\n            <Grid item xs key={index} style={{ textAlign: \"center\" }}>\n              <Link\n                to={`/country/${country.country}`}\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                <span\n                  role=\"img\"\n                  style={{\n                    display: \"inline-block\",\n                    fontSize: \"3em\",\n                    lineHeight: \"1em\",\n                    verticalAlign: \"middle\"\n                  }}\n                >\n                  {country.country_code\n                    .toUpperCase()\n                    .replace(/./g, char =>\n                      String.fromCodePoint(char.charCodeAt(0) + 127397)\n                    )}\n                </span>\n                <h3>{country.province ? country.province : country.country}</h3>\n              </Link>\n            </Grid>\n          ))}\n      </Grid>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport CountryTable from \"../../components/Table\";\n\nexport default function Worldwide(props) {\n  const { data } = props;\n  ReactGA.pageview(\"/worldwide\");\n  return (\n    <Layout>\n      <h1>Worldwide Cases</h1>\n      <h3>Click on a Country to open a detailed view.</h3>\n      <CountryTable data={data} />\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nimport News from \"../../components/News\";\n\nexport default function NewsView() {\n  ReactGA.pageview(\"/news\");\n  return (\n    <Layout>\n      <h1>Worldwide News</h1>\n      <News />\n    </Layout>\n  );\n}\n","import React from \"react\";\n\n//components\nimport Layout from \"../../components/Layout\";\n\nexport default function NotFound() {\n  return (\n    <Layout>\n      <h1>NotFOuNBNDDD</h1>\n    </Layout>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport CImage from \"../../assets/images/banner.png\";\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <meta property=\"og:type\" content=\"website\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta property=\"og:title\" content=\"Corona Virus Tracker | COVID-19\" />\n          <meta\n            property=\"og:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"og:image\" content={CImage} />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta\n            property=\"twitter:url\"\n            content=\"https://lars.coffee/covid19-tracker/\"\n          />\n          <meta\n            property=\"twitter:title\"\n            content=\"Corona Virus Tracker | COVID-19\"\n          />\n          <meta\n            property=\"twitter:description\"\n            content=\"Worldwide COVID-19 Tracker | Live updates | 24/7\"\n          />\n          <meta property=\"twitter:image\" content={CImage} />\n        </Helmet>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tags;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\n//views\nimport Home from \"./Home\";\nimport Country from \"./Country\";\nimport Countries from \"./Countries\";\nimport Worldwide from \"./Worldwide\";\nimport News from \"./News\";\nimport NotFound from \"./NotFound\";\n\n//components\nimport Tags from \"../components/Tags\";\n\n// Helpers\nimport { useFetch } from \"usefetch-caching\";\nimport history from \"../helpers/history\";\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  const data = useFetch(\n    `https://coronavirus-tracker-api.herokuapp.com/all`,\n    \"items\"\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Tags />\n\n      <Router basename=\"/\" history={history}>\n        <Route component={ScrollToTop} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home data={data} />\n          </Route>\n          <Route exact path=\"/worldwide\">\n            <Worldwide data={data} />\n          </Route>\n          <Route exact path=\"/countries\">\n            <Countries data={data} />\n          </Route>\n          <Route exact path=\"/news\">\n            <News />\n          </Route>\n          <Route exact path=\"/country/:country\">\n            <Country data={data} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst ScrollToTop = () => {\n  window.scrollTo(0, 0);\n  return null;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactGA.initialize(\"UA-37850527-11\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/banner.2d30a510.png\";"],"sourceRoot":""}